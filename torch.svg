<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="12000" height="550" onload="init(evt)" viewBox="0 0 12000 550" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<!-- Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples. -->
<!-- NOTES:  -->
<defs>
	<linearGradient id="background" y1="0" y2="1" x1="0" x2="0" >
		<stop stop-color="#eeeeee" offset="5%" />
		<stop stop-color="#eeeeb0" offset="95%" />
	</linearGradient>
</defs>
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search, #ignorecase { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show, #ignorecase:hover, #ignorecase.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching, currentSearchTerm, ignorecase, ignorecaseBtn;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		ignorecaseBtn = document.getElementById("ignorecase");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
		currentSearchTerm = null;
	}

	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
		}
		else if (e.target.id == "unzoom") unzoom();
		else if (e.target.id == "search") search_prompt();
		else if (e.target.id == "ignorecase") toggle_ignorecase();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
	}, false)

	// ctrl-I to toggle case-sensitive search
	window.addEventListener("keydown",function (e) {
		if (e.ctrlKey && e.keyCode === 73) {
			e.preventDefault();
			toggle_ignorecase();
		}
	}, false)

	// functions
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
		return;
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
		search();
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
		search();
	}

	// search
	function toggle_ignorecase() {
		ignorecase = !ignorecase;
		if (ignorecase) {
			ignorecaseBtn.classList.add("show");
		} else {
			ignorecaseBtn.classList.remove("show");
		}
		reset_search();
		search();
	}
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)"
			    + (ignorecase ? ", ignoring case" : "")
			    + "\nPress Ctrl-i to toggle case sensitivity", "");
			if (term != null) {
				currentSearchTerm = term;
				search();
			}
		} else {
			reset_search();
			searching = 0;
			currentSearchTerm = null;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		if (currentSearchTerm === null) return;
		var term = currentSearchTerm;

		var re = new RegExp(term, ignorecase ? 'i' : '');
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0.0" y="0" width="12000.0" height="550.0" fill="url(#background)"  />
<text id="title" x="6000.00" y="24" >Flame Graph</text>
<text id="details" x="10.00" y="533" > </text>
<text id="unzoom" x="10.00" y="24" class="hide">Reset Zoom</text>
<text id="search" x="11890.00" y="24" >Search</text>
<text id="ignorecase" x="11974.00" y="24" >ic</text>
<text id="matched" x="11890.00" y="533" > </text>
<g id="frames">
<g >
<title>runtime.nanotime1 (1 samples, 0.71%)</title><rect x="11476.6" y="389" width="85.5" height="15.0" fill="rgb(207,28,22)" rx="2" ry="2" />
<text  x="11479.57" y="399.5" >runtime.na..</text>
</g>
<g >
<title>runtime.hashGrow (1 samples, 0.71%)</title><rect x="3090.6" y="197" width="85.5" height="15.0" fill="rgb(241,12,10)" rx="2" ry="2" />
<text  x="3093.57" y="207.5" >runtime.ha..</text>
</g>
<g >
<title>runtime.memmove (3 samples, 2.14%)</title><rect x="5058.7" y="389" width="256.7" height="15.0" fill="rgb(242,132,38)" rx="2" ry="2" />
<text  x="5061.71" y="399.5" >runtime.memmove</text>
</g>
<g >
<title>encoding/json.stateEndValue (1 samples, 0.71%)</title><rect x="1978.1" y="229" width="85.6" height="15.0" fill="rgb(210,112,42)" rx="2" ry="2" />
<text  x="1981.14" y="239.5" >encoding/j..</text>
</g>
<g >
<title>encoding/json.(*decodeState).arrayInterface (2 samples, 1.43%)</title><rect x="2063.7" y="229" width="171.2" height="15.0" fill="rgb(243,128,29)" rx="2" ry="2" />
<text  x="2066.71" y="239.5" >encoding/json.(*decode..</text>
</g>
<g >
<title>net/http.(*http2clientConnReadLoop).run (15 samples, 10.71%)</title><rect x="10.0" y="469" width="1283.6" height="15.0" fill="rgb(246,150,6)" rx="2" ry="2" />
<text  x="13.00" y="479.5" >net/http.(*http2clientConnReadLoop).run</text>
</g>
<g >
<title>encoding/json.(*decodeState).valueInterface (11 samples, 7.86%)</title><rect x="5828.9" y="309" width="941.2" height="15.0" fill="rgb(247,179,53)" rx="2" ry="2" />
<text  x="5831.86" y="319.5" >encoding/json.(*decodeState).valueInterface</text>
</g>
<g >
<title>runtime.systemstack (1 samples, 0.71%)</title><rect x="3432.9" y="85" width="85.5" height="15.0" fill="rgb(209,15,35)" rx="2" ry="2" />
<text  x="3435.86" y="95.5" >runtime.sy..</text>
</g>
<g >
<title>runtime.systemstack (1 samples, 0.71%)</title><rect x="6000.0" y="181" width="85.6" height="15.0" fill="rgb(205,40,7)" rx="2" ry="2" />
<text  x="6003.00" y="191.5" >runtime.sy..</text>
</g>
<g >
<title>encoding/json.(*decodeState).literalInterface (1 samples, 0.71%)</title><rect x="1892.6" y="261" width="85.5" height="15.0" fill="rgb(230,37,31)" rx="2" ry="2" />
<text  x="1895.57" y="271.5" >encoding/j..</text>
</g>
<g >
<title>encoding/json.unquoteBytes (1 samples, 0.71%)</title><rect x="6427.9" y="245" width="85.5" height="15.0" fill="rgb(219,24,16)" rx="2" ry="2" />
<text  x="6430.86" y="255.5" >encoding/j..</text>
</g>
<g >
<title>encoding/json.(*decodeState).valueInterface (11 samples, 7.86%)</title><rect x="5828.9" y="341" width="941.2" height="15.0" fill="rgb(220,186,53)" rx="2" ry="2" />
<text  x="5831.86" y="351.5" >encoding/json.(*decodeState).valueInterface</text>
</g>
<g >
<title>crypto/tls.(*Conn).writeRecordLocked (3 samples, 2.14%)</title><rect x="5315.4" y="341" width="256.7" height="15.0" fill="rgb(227,81,41)" rx="2" ry="2" />
<text  x="5318.43" y="351.5" >crypto/tls.(*Conn).writeRecordLocked</text>
</g>
<g >
<title>runtime.startm (2 samples, 1.43%)</title><rect x="1122.4" y="293" width="171.2" height="15.0" fill="rgb(221,168,28)" rx="2" ry="2" />
<text  x="1125.43" y="303.5" >runtime.startm</text>
</g>
<g >
<title>runtime.convTstring (1 samples, 0.71%)</title><rect x="1892.6" y="245" width="85.5" height="15.0" fill="rgb(233,38,20)" rx="2" ry="2" />
<text  x="1895.57" y="255.5" >runtime.co..</text>
</g>
<g >
<title>runtime.goschedImpl (1 samples, 0.71%)</title><rect x="11476.6" y="453" width="85.5" height="15.0" fill="rgb(242,70,5)" rx="2" ry="2" />
<text  x="11479.57" y="463.5" >runtime.go..</text>
</g>
<g >
<title>syscall.write (3 samples, 2.14%)</title><rect x="5315.4" y="229" width="256.7" height="15.0" fill="rgb(213,35,26)" rx="2" ry="2" />
<text  x="5318.43" y="239.5" >syscall.write</text>
</g>
<g >
<title>runtime.entersyscall_sysmon (2 samples, 1.43%)</title><rect x="523.4" y="149" width="171.2" height="15.0" fill="rgb(207,24,4)" rx="2" ry="2" />
<text  x="526.43" y="159.5" >runtime.entersyscall_s..</text>
</g>
<g >
<title>runtime.newobject (1 samples, 0.71%)</title><rect x="6000.0" y="229" width="85.6" height="15.0" fill="rgb(223,93,4)" rx="2" ry="2" />
<text  x="6003.00" y="239.5" >runtime.ne..</text>
</g>
<g >
<title>runtime.wbBufFlush.func1 (1 samples, 0.71%)</title><rect x="7198.0" y="293" width="85.6" height="15.0" fill="rgb(238,174,18)" rx="2" ry="2" />
<text  x="7201.00" y="303.5" >runtime.wb..</text>
</g>
<g >
<title>runtime.makeBucketArray (1 samples, 0.71%)</title><rect x="3090.6" y="181" width="85.5" height="15.0" fill="rgb(214,63,23)" rx="2" ry="2" />
<text  x="3093.57" y="191.5" >runtime.ma..</text>
</g>
<g >
<title>vendor/golang.org/x/crypto/chacha20poly1305.(*chacha20poly1305).Open (1 samples, 0.71%)</title><rect x="10.0" y="341" width="85.6" height="15.0" fill="rgb(233,47,10)" rx="2" ry="2" />
<text  x="13.00" y="351.5" >vendor/gol..</text>
</g>
<g >
<title>encoding/json.(*decodeState).objectInterface (7 samples, 5.00%)</title><rect x="5828.9" y="261" width="599.0" height="15.0" fill="rgb(207,52,1)" rx="2" ry="2" />
<text  x="5831.86" y="271.5" >encoding/json.(*decodeState).objectInterface</text>
</g>
<g >
<title>runtime.epollwait (1 samples, 0.71%)</title><rect x="8310.4" y="389" width="85.6" height="15.0" fill="rgb(212,73,53)" rx="2" ry="2" />
<text  x="8313.43" y="399.5" >runtime.ep..</text>
</g>
<g >
<title>encoding/json.stateBeginValue (1 samples, 0.71%)</title><rect x="4459.7" y="421" width="85.6" height="15.0" fill="rgb(247,57,47)" rx="2" ry="2" />
<text  x="4462.71" y="431.5" >encoding/j..</text>
</g>
<g >
<title>runtime.mProf_Malloc (1 samples, 0.71%)</title><rect x="7797.0" y="405" width="85.6" height="15.0" fill="rgb(216,198,35)" rx="2" ry="2" />
<text  x="7800.00" y="415.5" >runtime.mP..</text>
</g>
<g >
<title>runtime.mallocgc (1 samples, 0.71%)</title><rect x="7797.0" y="437" width="85.6" height="15.0" fill="rgb(245,139,1)" rx="2" ry="2" />
<text  x="7800.00" y="447.5" >runtime.ma..</text>
</g>
<g >
<title>runtime.mstart (1 samples, 0.71%)</title><rect x="11904.4" y="485" width="85.6" height="15.0" fill="rgb(207,88,13)" rx="2" ry="2" />
<text  x="11907.43" y="495.5" >runtime.ms..</text>
</g>
<g >
<title>runtime.(*mcentral).cacheSpan (1 samples, 0.71%)</title><rect x="2491.6" y="117" width="85.5" height="15.0" fill="rgb(230,207,1)" rx="2" ry="2" />
<text  x="2494.57" y="127.5" >runtime.(*..</text>
</g>
<g >
<title>runtime.gcDrainN (1 samples, 0.71%)</title><rect x="6000.0" y="133" width="85.6" height="15.0" fill="rgb(248,120,27)" rx="2" ry="2" />
<text  x="6003.00" y="143.5" >runtime.gc..</text>
</g>
<g >
<title>bytes.(*Buffer).grow (5 samples, 3.57%)</title><rect x="4887.6" y="405" width="427.8" height="15.0" fill="rgb(246,165,14)" rx="2" ry="2" />
<text  x="4890.57" y="415.5" >bytes.(*Buffer).grow</text>
</g>
<g >
<title>github.com/imdario/mergo.deepMerge (1 samples, 0.71%)</title><rect x="1293.6" y="389" width="85.5" height="15.0" fill="rgb(220,93,27)" rx="2" ry="2" />
<text  x="1296.57" y="399.5" >github.com..</text>
</g>
<g >
<title>encoding/json.(*decodeState).valueInterface (1 samples, 0.71%)</title><rect x="5914.4" y="245" width="85.6" height="15.0" fill="rgb(228,51,51)" rx="2" ry="2" />
<text  x="5917.43" y="255.5" >encoding/j..</text>
</g>
<g >
<title>bytes.makeSlice (2 samples, 1.43%)</title><rect x="4887.6" y="389" width="171.1" height="15.0" fill="rgb(249,190,21)" rx="2" ry="2" />
<text  x="4890.57" y="399.5" >bytes.makeSlice</text>
</g>
<g >
<title>encoding/json.unquoteBytes (1 samples, 0.71%)</title><rect x="2577.1" y="181" width="85.6" height="15.0" fill="rgb(217,119,46)" rx="2" ry="2" />
<text  x="2580.14" y="191.5" >encoding/j..</text>
</g>
<g >
<title>encoding/json.Unmarshal (13 samples, 9.29%)</title><rect x="5828.9" y="453" width="1112.4" height="15.0" fill="rgb(249,20,53)" rx="2" ry="2" />
<text  x="5831.86" y="463.5" >encoding/json.Unmarshal</text>
</g>
<g >
<title>internal/poll.ignoringEINTR (5 samples, 3.57%)</title><rect x="266.7" y="261" width="427.9" height="15.0" fill="rgb(206,195,27)" rx="2" ry="2" />
<text  x="269.71" y="271.5" >internal/poll.ignoringEINTR</text>
</g>
<g >
<title>runtime.markBits.isMarked (2 samples, 1.43%)</title><rect x="10364.1" y="405" width="171.2" height="15.0" fill="rgb(249,35,30)" rx="2" ry="2" />
<text  x="10367.14" y="415.5" >runtime.markBits.isMar..</text>
</g>
<g >
<title>runtime.gcBgMarkWorker.func2 (36 samples, 25.71%)</title><rect x="8053.7" y="453" width="3080.6" height="15.0" fill="rgb(235,104,49)" rx="2" ry="2" />
<text  x="8056.71" y="463.5" >runtime.gcBgMarkWorker.func2</text>
</g>
<g >
<title>runtime.gcAssistAlloc1 (1 samples, 0.71%)</title><rect x="6000.0" y="149" width="85.6" height="15.0" fill="rgb(230,196,7)" rx="2" ry="2" />
<text  x="6003.00" y="159.5" >runtime.gc..</text>
</g>
<g >
<title>runtime.mapassign_faststr (2 samples, 1.43%)</title><rect x="3432.9" y="245" width="171.1" height="15.0" fill="rgb(238,204,0)" rx="2" ry="2" />
<text  x="3435.86" y="255.5" >runtime.mapassign_fast..</text>
</g>
<g >
<title>runtime.makeslice (2 samples, 1.43%)</title><rect x="4887.6" y="373" width="171.1" height="15.0" fill="rgb(217,35,2)" rx="2" ry="2" />
<text  x="4890.57" y="383.5" >runtime.makeslice</text>
</g>
<g >
<title>runtime.pcvalue (1 samples, 0.71%)</title><rect x="3347.3" y="69" width="85.6" height="15.0" fill="rgb(224,166,19)" rx="2" ry="2" />
<text  x="3350.29" y="79.5" >runtime.pc..</text>
</g>
<g >
<title>encoding/json.(*decodeState).valueInterface (22 samples, 15.71%)</title><rect x="1892.6" y="277" width="1882.5" height="15.0" fill="rgb(233,7,18)" rx="2" ry="2" />
<text  x="1895.57" y="287.5" >encoding/json.(*decodeState).valueInterface</text>
</g>
<g >
<title>runtime.systemstack (2 samples, 1.43%)</title><rect x="1122.4" y="357" width="171.2" height="15.0" fill="rgb(246,228,4)" rx="2" ry="2" />
<text  x="1125.43" y="367.5" >runtime.systemstack</text>
</g>
<g >
<title>encoding/json.(*decodeState).literalInterface (2 samples, 1.43%)</title><rect x="1550.3" y="229" width="171.1" height="15.0" fill="rgb(236,172,24)" rx="2" ry="2" />
<text  x="1553.29" y="239.5" >encoding/json.(*decode..</text>
</g>
<g >
<title>runtime.futex (2 samples, 1.43%)</title><rect x="1122.4" y="245" width="171.2" height="15.0" fill="rgb(248,26,2)" rx="2" ry="2" />
<text  x="1125.43" y="255.5" >runtime.futex</text>
</g>
<g >
<title>runtime.gcAssistAlloc (1 samples, 0.71%)</title><rect x="6684.6" y="229" width="85.5" height="15.0" fill="rgb(252,179,47)" rx="2" ry="2" />
<text  x="6687.57" y="239.5" >runtime.gc..</text>
</g>
<g >
<title>runtime.stkbucket (1 samples, 0.71%)</title><rect x="6599.0" y="181" width="85.6" height="15.0" fill="rgb(209,127,0)" rx="2" ry="2" />
<text  x="6602.00" y="191.5" >runtime.st..</text>
</g>
<g >
<title>encoding/json.(*decodeState).valueInterface (2 samples, 1.43%)</title><rect x="1550.3" y="245" width="171.1" height="15.0" fill="rgb(247,207,38)" rx="2" ry="2" />
<text  x="1553.29" y="255.5" >encoding/json.(*decode..</text>
</g>
<g >
<title>report-istags/ocrequest.GetAllImagesOfCluster (51 samples, 36.43%)</title><rect x="1464.7" y="469" width="4364.2" height="15.0" fill="rgb(249,149,28)" rx="2" ry="2" />
<text  x="1467.71" y="479.5" >report-istags/ocrequest.GetAllImagesOfCluster</text>
</g>
<g >
<title>net.(*netFD).Read (5 samples, 3.57%)</title><rect x="266.7" y="293" width="427.9" height="15.0" fill="rgb(231,188,41)" rx="2" ry="2" />
<text  x="269.71" y="303.5" >net.(*netFD).Read</text>
</g>
<g >
<title>runtime.notesleep (1 samples, 0.71%)</title><rect x="11647.7" y="405" width="85.6" height="15.0" fill="rgb(242,48,12)" rx="2" ry="2" />
<text  x="11650.71" y="415.5" >runtime.no..</text>
</g>
<g >
<title>runtime.(*mheap).alloc (2 samples, 1.43%)</title><rect x="4887.6" y="293" width="171.1" height="15.0" fill="rgb(249,23,12)" rx="2" ry="2" />
<text  x="4890.57" y="303.5" >runtime.(*mheap).alloc</text>
</g>
<g >
<title>report-istags/ocrequest.(*T_istagBuildLabels).Set (1 samples, 0.71%)</title><rect x="7540.3" y="453" width="85.6" height="15.0" fill="rgb(209,0,19)" rx="2" ry="2" />
<text  x="7543.29" y="463.5" >report-ist..</text>
</g>
<g >
<title>runtime.(*mcache).refill (1 samples, 0.71%)</title><rect x="2491.6" y="133" width="85.5" height="15.0" fill="rgb(239,14,27)" rx="2" ry="2" />
<text  x="2494.57" y="143.5" >runtime.(*..</text>
</g>
<g >
<title>runtime.futex (1 samples, 0.71%)</title><rect x="11391.0" y="405" width="85.6" height="15.0" fill="rgb(235,4,46)" rx="2" ry="2" />
<text  x="11394.00" y="415.5" >runtime.fu..</text>
</g>
<g >
<title>runtime.callers (1 samples, 0.71%)</title><rect x="3347.3" y="149" width="85.6" height="15.0" fill="rgb(208,161,42)" rx="2" ry="2" />
<text  x="3350.29" y="159.5" >runtime.ca..</text>
</g>
<g >
<title>encoding/json.(*decodeState).rescanLiteral (2 samples, 1.43%)</title><rect x="2234.9" y="181" width="171.1" height="15.0" fill="rgb(209,197,48)" rx="2" ry="2" />
<text  x="2237.86" y="191.5" >encoding/json.(*decode..</text>
</g>
<g >
<title>encoding/json.(*decodeState).value (11 samples, 7.86%)</title><rect x="5828.9" y="421" width="941.2" height="15.0" fill="rgb(250,3,48)" rx="2" ry="2" />
<text  x="5831.86" y="431.5" >encoding/json.(*decodeState).value</text>
</g>
<g >
<title>runtime.profilealloc (1 samples, 0.71%)</title><rect x="3347.3" y="181" width="85.6" height="15.0" fill="rgb(213,54,5)" rx="2" ry="2" />
<text  x="3350.29" y="191.5" >runtime.pr..</text>
</g>
<g >
<title>reflect.Value.Len (1 samples, 0.71%)</title><rect x="1293.6" y="309" width="85.5" height="15.0" fill="rgb(211,133,44)" rx="2" ry="2" />
<text  x="1296.57" y="319.5" >reflect.Va..</text>
</g>
<g >
<title>bytes.(*Buffer).ReadFrom (8 samples, 5.71%)</title><rect x="4887.6" y="421" width="684.5" height="15.0" fill="rgb(245,76,33)" rx="2" ry="2" />
<text  x="4890.57" y="431.5" >bytes.(*Buffer).ReadFrom</text>
</g>
<g >
<title>encoding/json.(*decodeState).literalInterface (4 samples, 2.86%)</title><rect x="2234.9" y="197" width="342.2" height="15.0" fill="rgb(218,88,29)" rx="2" ry="2" />
<text  x="2237.86" y="207.5" >encoding/json.(*decodeState).literalInterface</text>
</g>
<g >
<title>runtime.(*mcache).refill (1 samples, 0.71%)</title><rect x="3432.9" y="149" width="85.5" height="15.0" fill="rgb(232,128,28)" rx="2" ry="2" />
<text  x="3435.86" y="159.5" >runtime.(*..</text>
</g>
<g >
<title>github.com/imdario/mergo.isEmptyValue (1 samples, 0.71%)</title><rect x="6941.3" y="373" width="85.6" height="15.0" fill="rgb(244,166,41)" rx="2" ry="2" />
<text  x="6944.29" y="383.5" >github.com..</text>
</g>
<g >
<title>encoding/json.stateEndValue (1 samples, 0.71%)</title><rect x="4545.3" y="421" width="85.6" height="15.0" fill="rgb(213,46,49)" rx="2" ry="2" />
<text  x="4548.29" y="431.5" >encoding/j..</text>
</g>
<g >
<title>encoding/json.(*decodeState).valueInterface (16 samples, 11.43%)</title><rect x="2063.7" y="245" width="1369.2" height="15.0" fill="rgb(205,16,13)" rx="2" ry="2" />
<text  x="2066.71" y="255.5" >encoding/json.(*decodeState).valueInterface</text>
</g>
<g >
<title>runtime.convTstring (1 samples, 0.71%)</title><rect x="5914.4" y="213" width="85.6" height="15.0" fill="rgb(237,108,38)" rx="2" ry="2" />
<text  x="5917.43" y="223.5" >runtime.co..</text>
</g>
<g >
<title>runtime.(*mheap).alloc (1 samples, 0.71%)</title><rect x="2491.6" y="85" width="85.5" height="15.0" fill="rgb(254,92,8)" rx="2" ry="2" />
<text  x="2494.57" y="95.5" >runtime.(*..</text>
</g>
<g >
<title>runtime.stopm (1 samples, 0.71%)</title><rect x="11391.0" y="453" width="85.6" height="15.0" fill="rgb(228,178,33)" rx="2" ry="2" />
<text  x="11394.00" y="463.5" >runtime.st..</text>
</g>
<g >
<title>report-istags/ocrequest.ocGetCall (1 samples, 0.71%)</title><rect x="7625.9" y="453" width="85.5" height="15.0" fill="rgb(227,206,49)" rx="2" ry="2" />
<text  x="7628.86" y="463.5" >report-ist..</text>
</g>
<g >
<title>crypto/tls.(*xorNonceAEAD).Open (1 samples, 0.71%)</title><rect x="10.0" y="357" width="85.6" height="15.0" fill="rgb(248,97,21)" rx="2" ry="2" />
<text  x="13.00" y="367.5" >crypto/tls..</text>
</g>
<g >
<title>runtime.mallocgc (2 samples, 1.43%)</title><rect x="2406.0" y="165" width="171.1" height="15.0" fill="rgb(217,123,21)" rx="2" ry="2" />
<text  x="2409.00" y="175.5" >runtime.mallocgc</text>
</g>
<g >
<title>runtime.funcspdelta (1 samples, 0.71%)</title><rect x="3090.6" y="37" width="85.5" height="15.0" fill="rgb(227,63,31)" rx="2" ry="2" />
<text  x="3093.57" y="47.5" >runtime.fu..</text>
</g>
<g >
<title>encoding/json.stateInString (3 samples, 2.14%)</title><rect x="4630.9" y="421" width="256.7" height="15.0" fill="rgb(249,80,36)" rx="2" ry="2" />
<text  x="4633.86" y="431.5" >encoding/json.stateInString</text>
</g>
<g >
<title>runtime.heapBits.initSpan (1 samples, 0.71%)</title><rect x="5743.3" y="357" width="85.6" height="15.0" fill="rgb(249,141,36)" rx="2" ry="2" />
<text  x="5746.29" y="367.5" >runtime.he..</text>
</g>
<g >
<title>runtime.futexsleep (1 samples, 0.71%)</title><rect x="11647.7" y="389" width="85.6" height="15.0" fill="rgb(221,27,3)" rx="2" ry="2" />
<text  x="11650.71" y="399.5" >runtime.fu..</text>
</g>
<g >
<title>syscall.Syscall (5 samples, 3.57%)</title><rect x="266.7" y="213" width="427.9" height="15.0" fill="rgb(226,207,41)" rx="2" ry="2" />
<text  x="269.71" y="223.5" >syscall.Syscall</text>
</g>
<g >
<title>runtime.hashGrow (2 samples, 1.43%)</title><rect x="3432.9" y="229" width="171.1" height="15.0" fill="rgb(250,186,16)" rx="2" ry="2" />
<text  x="3435.86" y="239.5" >runtime.hashGrow</text>
</g>
<g >
<title>crypto/tls.(*Conn).Write (3 samples, 2.14%)</title><rect x="5315.4" y="357" width="256.7" height="15.0" fill="rgb(212,98,8)" rx="2" ry="2" />
<text  x="5318.43" y="367.5" >crypto/tls.(*Conn).Write</text>
</g>
<g >
<title>runtime.mallocgc (1 samples, 0.71%)</title><rect x="3689.6" y="229" width="85.5" height="15.0" fill="rgb(245,151,23)" rx="2" ry="2" />
<text  x="3692.57" y="239.5" >runtime.ma..</text>
</g>
<g >
<title>runtime.slicebytetostring (3 samples, 2.14%)</title><rect x="3176.1" y="213" width="256.8" height="15.0" fill="rgb(238,228,24)" rx="2" ry="2" />
<text  x="3179.14" y="223.5" >runtime.slicebytetostring</text>
</g>
<g >
<title>encoding/json.(*decodeState).valueInterface (3 samples, 2.14%)</title><rect x="1550.3" y="277" width="256.7" height="15.0" fill="rgb(224,178,29)" rx="2" ry="2" />
<text  x="1553.29" y="287.5" >encoding/json.(*decodeState).value..</text>
</g>
<g >
<title>runtime.add (1 samples, 0.71%)</title><rect x="7540.3" y="437" width="85.6" height="15.0" fill="rgb(241,164,16)" rx="2" ry="2" />
<text  x="7543.29" y="447.5" >runtime.add</text>
</g>
<g >
<title>encoding/json.(*decodeState).objectInterface (23 samples, 16.43%)</title><rect x="1892.6" y="293" width="1968.1" height="15.0" fill="rgb(228,125,48)" rx="2" ry="2" />
<text  x="1895.57" y="303.5" >encoding/json.(*decodeState).objectInterface</text>
</g>
<g >
<title>encoding/json.unquoteBytes (1 samples, 0.71%)</title><rect x="2149.3" y="181" width="85.6" height="15.0" fill="rgb(243,19,2)" rx="2" ry="2" />
<text  x="2152.29" y="191.5" >encoding/j..</text>
</g>
<g >
<title>runtime.slicebytetostring (1 samples, 0.71%)</title><rect x="3689.6" y="245" width="85.5" height="15.0" fill="rgb(219,67,38)" rx="2" ry="2" />
<text  x="3692.57" y="255.5" >runtime.sl..</text>
</g>
<g >
<title>runtime.findObject (1 samples, 0.71%)</title><rect x="6000.0" y="101" width="85.6" height="15.0" fill="rgb(237,212,54)" rx="2" ry="2" />
<text  x="6003.00" y="111.5" >runtime.fi..</text>
</g>
<g >
<title>report-istags/ocrequest.tablePrettyprint (3 samples, 2.14%)</title><rect x="11134.3" y="437" width="256.7" height="15.0" fill="rgb(252,134,3)" rx="2" ry="2" />
<text  x="11137.29" y="447.5" >report-istags/ocrequest.tablePrett..</text>
</g>
<g >
<title>encoding/json.Unmarshal (40 samples, 28.57%)</title><rect x="1464.7" y="453" width="3422.9" height="15.0" fill="rgb(224,203,32)" rx="2" ry="2" />
<text  x="1467.71" y="463.5" >encoding/json.Unmarshal</text>
</g>
<g >
<title>github.com/mattn/go-runewidth.RuneWidth (1 samples, 0.71%)</title><rect x="11134.3" y="357" width="85.6" height="15.0" fill="rgb(225,69,7)" rx="2" ry="2" />
<text  x="11137.29" y="367.5" >github.com..</text>
</g>
<g >
<title>report-istags/ocrequest.workerExistingIstags (26 samples, 18.57%)</title><rect x="5828.9" y="485" width="2224.8" height="15.0" fill="rgb(207,152,53)" rx="2" ry="2" />
<text  x="5831.86" y="495.5" >report-istags/ocrequest.workerExistingIstags</text>
</g>
<g >
<title>runtime.slicebytetostring (1 samples, 0.71%)</title><rect x="11305.4" y="293" width="85.6" height="15.0" fill="rgb(235,106,0)" rx="2" ry="2" />
<text  x="11308.43" y="303.5" >runtime.sl..</text>
</g>
<g >
<title>crypto/tls.(*Conn).readRecordOrCCS (1 samples, 0.71%)</title><rect x="10.0" y="389" width="85.6" height="15.0" fill="rgb(253,81,46)" rx="2" ry="2" />
<text  x="13.00" y="399.5" >crypto/tls..</text>
</g>
<g >
<title>reflect.Value.SetMapIndex (3 samples, 2.14%)</title><rect x="7283.6" y="405" width="256.7" height="15.0" fill="rgb(233,173,47)" rx="2" ry="2" />
<text  x="7286.57" y="415.5" >reflect.Value.SetMapIndex</text>
</g>
<g >
<title>runtime.heapBitsForAddr (1 samples, 0.71%)</title><rect x="3518.4" y="165" width="85.6" height="15.0" fill="rgb(225,202,15)" rx="2" ry="2" />
<text  x="3521.43" y="175.5" >runtime.he..</text>
</g>
<g >
<title>runtime.pageIndexOf (7 samples, 5.00%)</title><rect x="10535.3" y="405" width="599.0" height="15.0" fill="rgb(229,112,9)" rx="2" ry="2" />
<text  x="10538.29" y="415.5" >runtime.pageIndexOf</text>
</g>
<g >
<title>runtime.add1 (1 samples, 0.71%)</title><rect x="8139.3" y="421" width="85.6" height="15.0" fill="rgb(213,218,43)" rx="2" ry="2" />
<text  x="8142.29" y="431.5" >runtime.add1</text>
</g>
<g >
<title>runtime.gentraceback (1 samples, 0.71%)</title><rect x="3090.6" y="53" width="85.5" height="15.0" fill="rgb(217,9,38)" rx="2" ry="2" />
<text  x="3093.57" y="63.5" >runtime.ge..</text>
</g>
<g >
<title>runtime.mapiternext (1 samples, 0.71%)</title><rect x="7198.0" y="373" width="85.6" height="15.0" fill="rgb(252,66,15)" rx="2" ry="2" />
<text  x="7201.00" y="383.5" >runtime.ma..</text>
</g>
<g >
<title>runtime.gcWriteBarrier (1 samples, 0.71%)</title><rect x="7882.6" y="437" width="85.5" height="15.0" fill="rgb(246,166,49)" rx="2" ry="2" />
<text  x="7885.57" y="447.5" >runtime.gc..</text>
</g>
<g >
<title>io.ReadFull (10 samples, 7.14%)</title><rect x="181.1" y="437" width="855.8" height="15.0" fill="rgb(252,125,34)" rx="2" ry="2" />
<text  x="184.14" y="447.5" >io.ReadFull</text>
</g>
<g >
<title>encoding/json.(*decodeState).array (28 samples, 20.00%)</title><rect x="1464.7" y="373" width="2396.0" height="15.0" fill="rgb(223,44,12)" rx="2" ry="2" />
<text  x="1467.71" y="383.5" >encoding/json.(*decodeState).array</text>
</g>
<g >
<title>runtime.tooManyOverflowBuckets (1 samples, 0.71%)</title><rect x="1721.4" y="245" width="85.6" height="15.0" fill="rgb(240,200,27)" rx="2" ry="2" />
<text  x="1724.43" y="255.5" >runtime.to..</text>
</g>
<g >
<title>runtime.largeAlloc (1 samples, 0.71%)</title><rect x="5743.3" y="373" width="85.6" height="15.0" fill="rgb(218,219,23)" rx="2" ry="2" />
<text  x="5746.29" y="383.5" >runtime.la..</text>
</g>
<g >
<title>runtime.mapassign_faststr (1 samples, 0.71%)</title><rect x="3775.1" y="277" width="85.6" height="15.0" fill="rgb(213,154,34)" rx="2" ry="2" />
<text  x="3778.14" y="287.5" >runtime.ma..</text>
</g>
<g >
<title>github.com/mattn/go-runewidth.inTables (1 samples, 0.71%)</title><rect x="11134.3" y="325" width="85.6" height="15.0" fill="rgb(209,28,38)" rx="2" ry="2" />
<text  x="11137.29" y="335.5" >github.com..</text>
</g>
<g >
<title>net/http.(*http2ClientConn).readLoop (15 samples, 10.71%)</title><rect x="10.0" y="485" width="1283.6" height="15.0" fill="rgb(243,47,16)" rx="2" ry="2" />
<text  x="13.00" y="495.5" >net/http.(*http2ClientConn).readLoop</text>
</g>
<g >
<title>runtime.readyWithTime (2 samples, 1.43%)</title><rect x="1122.4" y="389" width="171.2" height="15.0" fill="rgb(218,97,50)" rx="2" ry="2" />
<text  x="1125.43" y="399.5" >runtime.readyWithTime</text>
</g>
<g >
<title>encoding/json.(*decodeState).objectInterface (3 samples, 2.14%)</title><rect x="1550.3" y="261" width="256.7" height="15.0" fill="rgb(247,210,6)" rx="2" ry="2" />
<text  x="1553.29" y="271.5" >encoding/json.(*decodeState).objec..</text>
</g>
<g >
<title>runtime.usleep (1 samples, 0.71%)</title><rect x="11904.4" y="437" width="85.6" height="15.0" fill="rgb(254,160,7)" rx="2" ry="2" />
<text  x="11907.43" y="447.5" >runtime.us..</text>
</g>
<g >
<title>encoding/json.checkValid (2 samples, 1.43%)</title><rect x="6770.1" y="437" width="171.2" height="15.0" fill="rgb(240,176,46)" rx="2" ry="2" />
<text  x="6773.14" y="447.5" >encoding/json.checkValid</text>
</g>
<g >
<title>github.com/jedib0t/go-pretty/v6/table.(*Table).renderRow (2 samples, 1.43%)</title><rect x="11219.9" y="389" width="171.1" height="15.0" fill="rgb(205,168,16)" rx="2" ry="2" />
<text  x="11222.86" y="399.5" >github.com/jedib0t/go-..</text>
</g>
<g >
<title>runtime.findrunnable (1 samples, 0.71%)</title><rect x="11476.6" y="421" width="85.5" height="15.0" fill="rgb(243,225,41)" rx="2" ry="2" />
<text  x="11479.57" y="431.5" >runtime.fi..</text>
</g>
<g >
<title>report-istags/ocrequest.LogMsg (1 samples, 0.71%)</title><rect x="1379.1" y="453" width="85.6" height="15.0" fill="rgb(240,179,16)" rx="2" ry="2" />
<text  x="1382.14" y="463.5" >report-ist..</text>
</g>
<g >
<title>encoding/json.(*decodeState).objectInterface (20 samples, 14.29%)</title><rect x="1978.1" y="261" width="1711.5" height="15.0" fill="rgb(219,0,44)" rx="2" ry="2" />
<text  x="1981.14" y="271.5" >encoding/json.(*decodeState).objectInterface</text>
</g>
<g >
<title>runtime.mallocgc (1 samples, 0.71%)</title><rect x="5914.4" y="197" width="85.6" height="15.0" fill="rgb(208,72,16)" rx="2" ry="2" />
<text  x="5917.43" y="207.5" >runtime.ma..</text>
</g>
<g >
<title>runtime.stringtoslicebyte (3 samples, 2.14%)</title><rect x="5572.1" y="453" width="256.8" height="15.0" fill="rgb(242,69,31)" rx="2" ry="2" />
<text  x="5575.14" y="463.5" >runtime.stringtoslicebyte</text>
</g>
<g >
<title>runtime.startm (2 samples, 1.43%)</title><rect x="11733.3" y="405" width="171.1" height="15.0" fill="rgb(245,126,43)" rx="2" ry="2" />
<text  x="11736.29" y="415.5" >runtime.startm</text>
</g>
<g >
<title>runtime.systemstack (1 samples, 0.71%)</title><rect x="3347.3" y="133" width="85.6" height="15.0" fill="rgb(206,78,52)" rx="2" ry="2" />
<text  x="3350.29" y="143.5" >runtime.sy..</text>
</g>
<g >
<title>report-istags/ocrequest.GetTableFromMap (3 samples, 2.14%)</title><rect x="11134.3" y="453" width="256.7" height="15.0" fill="rgb(240,186,49)" rx="2" ry="2" />
<text  x="11137.29" y="463.5" >report-istags/ocrequest.GetTableFr..</text>
</g>
<g >
<title>runtime.mallocgc (1 samples, 0.71%)</title><rect x="3604.0" y="229" width="85.6" height="15.0" fill="rgb(249,141,14)" rx="2" ry="2" />
<text  x="3607.00" y="239.5" >runtime.ma..</text>
</g>
<g >
<title>runtime.mProf_Malloc (1 samples, 0.71%)</title><rect x="6599.0" y="197" width="85.6" height="15.0" fill="rgb(213,16,1)" rx="2" ry="2" />
<text  x="6602.00" y="207.5" >runtime.mP..</text>
</g>
<g >
<title>runtime.heapBitsSetType (1 samples, 0.71%)</title><rect x="3604.0" y="213" width="85.6" height="15.0" fill="rgb(224,178,34)" rx="2" ry="2" />
<text  x="3607.00" y="223.5" >runtime.he..</text>
</g>
<g >
<title>runtime.mcall (6 samples, 4.29%)</title><rect x="11391.0" y="485" width="513.4" height="15.0" fill="rgb(234,9,32)" rx="2" ry="2" />
<text  x="11394.00" y="495.5" >runtime.mcall</text>
</g>
<g >
<title>runtime.mallocgc (1 samples, 0.71%)</title><rect x="3090.6" y="149" width="85.5" height="15.0" fill="rgb(221,112,33)" rx="2" ry="2" />
<text  x="3093.57" y="159.5" >runtime.ma..</text>
</g>
<g >
<title>runtime.futexwakeup (2 samples, 1.43%)</title><rect x="523.4" y="117" width="171.2" height="15.0" fill="rgb(228,91,14)" rx="2" ry="2" />
<text  x="526.43" y="127.5" >runtime.futexwakeup</text>
</g>
<g >
<title>runtime.pollWork (1 samples, 0.71%)</title><rect x="8310.4" y="421" width="85.6" height="15.0" fill="rgb(233,108,47)" rx="2" ry="2" />
<text  x="8313.43" y="431.5" >runtime.po..</text>
</g>
<g >
<title>main.main (3 samples, 2.14%)</title><rect x="11134.3" y="469" width="256.7" height="15.0" fill="rgb(215,208,20)" rx="2" ry="2" />
<text  x="11137.29" y="479.5" >main.main</text>
</g>
<g >
<title>net.(*netFD).Write (3 samples, 2.14%)</title><rect x="5315.4" y="293" width="256.7" height="15.0" fill="rgb(225,108,31)" rx="2" ry="2" />
<text  x="5318.43" y="303.5" >net.(*netFD).Write</text>
</g>
<g >
<title>runtime.memmove (1 samples, 0.71%)</title><rect x="7112.4" y="341" width="85.6" height="15.0" fill="rgb(252,157,30)" rx="2" ry="2" />
<text  x="7115.43" y="351.5" >runtime.me..</text>
</g>
<g >
<title>runtime.typedmemmove (3 samples, 2.14%)</title><rect x="7283.6" y="357" width="256.7" height="15.0" fill="rgb(238,23,12)" rx="2" ry="2" />
<text  x="7286.57" y="367.5" >runtime.typedmemmove</text>
</g>
<g >
<title>runtime.mallocgc (1 samples, 0.71%)</title><rect x="2662.7" y="165" width="85.6" height="15.0" fill="rgb(240,78,20)" rx="2" ry="2" />
<text  x="2665.71" y="175.5" >runtime.ma..</text>
</g>
<g >
<title>runtime.futexwakeup (2 samples, 1.43%)</title><rect x="11733.3" y="373" width="171.1" height="15.0" fill="rgb(238,94,12)" rx="2" ry="2" />
<text  x="11736.29" y="383.5" >runtime.futexwakeup</text>
</g>
<g >
<title>runtime.futex (1 samples, 0.71%)</title><rect x="11647.7" y="373" width="85.6" height="15.0" fill="rgb(249,7,9)" rx="2" ry="2" />
<text  x="11650.71" y="383.5" >runtime.fu..</text>
</g>
<g >
<title>runtime.notewakeup (2 samples, 1.43%)</title><rect x="523.4" y="133" width="171.2" height="15.0" fill="rgb(212,119,20)" rx="2" ry="2" />
<text  x="526.43" y="143.5" >runtime.notewakeup</text>
</g>
<g >
<title>encoding/json.(*decodeState).scanWhile (1 samples, 0.71%)</title><rect x="5828.9" y="245" width="85.5" height="15.0" fill="rgb(218,10,43)" rx="2" ry="2" />
<text  x="5831.86" y="255.5" >encoding/j..</text>
</g>
<g >
<title>github.com/mattn/go-runewidth.inTable (1 samples, 0.71%)</title><rect x="11134.3" y="309" width="85.6" height="15.0" fill="rgb(232,41,7)" rx="2" ry="2" />
<text  x="11137.29" y="319.5" >github.com..</text>
</g>
<g >
<title>runtime.scanobject (1 samples, 0.71%)</title><rect x="6000.0" y="117" width="85.6" height="15.0" fill="rgb(242,223,48)" rx="2" ry="2" />
<text  x="6003.00" y="127.5" >runtime.sc..</text>
</g>
<g >
<title>io.ReadFull (2 samples, 1.43%)</title><rect x="10.0" y="453" width="171.1" height="15.0" fill="rgb(234,22,12)" rx="2" ry="2" />
<text  x="13.00" y="463.5" >io.ReadFull</text>
</g>
<g >
<title>runtime.findObject (6 samples, 4.29%)</title><rect x="9765.1" y="405" width="513.5" height="15.0" fill="rgb(228,199,36)" rx="2" ry="2" />
<text  x="9768.14" y="415.5" >runtime.findObject</text>
</g>
<g >
<title>runtime.mallocgc.func1 (1 samples, 0.71%)</title><rect x="5743.3" y="389" width="85.6" height="15.0" fill="rgb(212,90,5)" rx="2" ry="2" />
<text  x="5746.29" y="399.5" >runtime.ma..</text>
</g>
<g >
<title>runtime.(*mcache).nextFree (1 samples, 0.71%)</title><rect x="2491.6" y="149" width="85.5" height="15.0" fill="rgb(215,11,5)" rx="2" ry="2" />
<text  x="2494.57" y="159.5" >runtime.(*..</text>
</g>
<g >
<title>runtime.greyobject (1 samples, 0.71%)</title><rect x="10278.6" y="405" width="85.5" height="15.0" fill="rgb(226,59,53)" rx="2" ry="2" />
<text  x="10281.57" y="415.5" >runtime.gr..</text>
</g>
<g >
<title>runtime.gosched_m (1 samples, 0.71%)</title><rect x="11476.6" y="469" width="85.5" height="15.0" fill="rgb(239,198,26)" rx="2" ry="2" />
<text  x="11479.57" y="479.5" >runtime.go..</text>
</g>
<g >
<title>runtime.goready (2 samples, 1.43%)</title><rect x="1122.4" y="373" width="171.2" height="15.0" fill="rgb(208,29,5)" rx="2" ry="2" />
<text  x="1125.43" y="383.5" >runtime.goready</text>
</g>
<g >
<title>runtime.systemstack (1 samples, 0.71%)</title><rect x="6684.6" y="213" width="85.5" height="15.0" fill="rgb(238,229,46)" rx="2" ry="2" />
<text  x="6687.57" y="223.5" >runtime.sy..</text>
</g>
<g >
<title>runtime.systemstack (2 samples, 1.43%)</title><rect x="523.4" y="165" width="171.2" height="15.0" fill="rgb(224,214,37)" rx="2" ry="2" />
<text  x="526.43" y="175.5" >runtime.systemstack</text>
</g>
<g >
<title>encoding/json.(*decodeState).valueInterface (28 samples, 20.00%)</title><rect x="1464.7" y="309" width="2396.0" height="15.0" fill="rgb(241,58,1)" rx="2" ry="2" />
<text  x="1467.71" y="319.5" >encoding/json.(*decodeState).valueInterface</text>
</g>
<g >
<title>vendor/golang.org/x/crypto/chacha20poly1305.chacha20Poly1305Open (1 samples, 0.71%)</title><rect x="10.0" y="309" width="85.6" height="15.0" fill="rgb(216,79,49)" rx="2" ry="2" />
<text  x="13.00" y="319.5" >vendor/gol..</text>
</g>
<g >
<title>all (140 samples, 100%)</title><rect x="10.0" y="501" width="11980.0" height="15.0" fill="rgb(246,87,13)" rx="2" ry="2" />
<text  x="13.00" y="511.5" ></text>
</g>
<g >
<title>github.com/mattn/go-runewidth.(*Condition).RuneWidth (1 samples, 0.71%)</title><rect x="11134.3" y="341" width="85.6" height="15.0" fill="rgb(253,33,3)" rx="2" ry="2" />
<text  x="11137.29" y="351.5" >github.com..</text>
</g>
<g >
<title>runtime.convTstring (2 samples, 1.43%)</title><rect x="2406.0" y="181" width="171.1" height="15.0" fill="rgb(218,218,47)" rx="2" ry="2" />
<text  x="2409.00" y="191.5" >runtime.convTstring</text>
</g>
<g >
<title>runtime.gcBgMarkWorker (36 samples, 25.71%)</title><rect x="8053.7" y="485" width="3080.6" height="15.0" fill="rgb(211,177,8)" rx="2" ry="2" />
<text  x="8056.71" y="495.5" >runtime.gcBgMarkWorker</text>
</g>
<g >
<title>runtime.wbBufFlush (1 samples, 0.71%)</title><rect x="7198.0" y="325" width="85.6" height="15.0" fill="rgb(216,191,20)" rx="2" ry="2" />
<text  x="7201.00" y="335.5" >runtime.wb..</text>
</g>
<g >
<title>report-istags/ocrequest.T_shaStreams.Add (1 samples, 0.71%)</title><rect x="7968.1" y="469" width="85.6" height="15.0" fill="rgb(226,49,29)" rx="2" ry="2" />
<text  x="7971.14" y="479.5" >report-ist..</text>
</g>
<g >
<title>encoding/json.(*decodeState).value (28 samples, 20.00%)</title><rect x="1464.7" y="389" width="2396.0" height="15.0" fill="rgb(214,132,41)" rx="2" ry="2" />
<text  x="1467.71" y="399.5" >encoding/json.(*decodeState).value</text>
</g>
<g >
<title>runtime.mallocgc (1 samples, 0.71%)</title><rect x="6000.0" y="213" width="85.6" height="15.0" fill="rgb(252,116,32)" rx="2" ry="2" />
<text  x="6003.00" y="223.5" >runtime.ma..</text>
</g>
<g >
<title>encoding/json.(*decodeState).arrayInterface (28 samples, 20.00%)</title><rect x="1464.7" y="357" width="2396.0" height="15.0" fill="rgb(226,31,5)" rx="2" ry="2" />
<text  x="1467.71" y="367.5" >encoding/json.(*decodeState).arrayInterface</text>
</g>
<g >
<title>runtime.profilealloc (1 samples, 0.71%)</title><rect x="7797.0" y="421" width="85.6" height="15.0" fill="rgb(252,5,41)" rx="2" ry="2" />
<text  x="7800.00" y="431.5" >runtime.pr..</text>
</g>
<g >
<title>runtime.newobject (1 samples, 0.71%)</title><rect x="1036.9" y="421" width="85.5" height="15.0" fill="rgb(229,179,46)" rx="2" ry="2" />
<text  x="1039.86" y="431.5" >runtime.ne..</text>
</g>
<g >
<title>crypto/tls.(*Conn).write (3 samples, 2.14%)</title><rect x="5315.4" y="325" width="256.7" height="15.0" fill="rgb(229,28,17)" rx="2" ry="2" />
<text  x="5318.43" y="335.5" >crypto/tls.(*Conn).write</text>
</g>
<g >
<title>runtime.notesleep (1 samples, 0.71%)</title><rect x="11391.0" y="437" width="85.6" height="15.0" fill="rgb(228,149,19)" rx="2" ry="2" />
<text  x="11394.00" y="447.5" >runtime.no..</text>
</g>
<g >
<title>github.com/jedib0t/go-pretty/v6/text.Colors.Sprint (1 samples, 0.71%)</title><rect x="11305.4" y="325" width="85.6" height="15.0" fill="rgb(206,121,20)" rx="2" ry="2" />
<text  x="11308.43" y="335.5" >github.com..</text>
</g>
<g >
<title>github.com/jedib0t/go-pretty/v6/table.(*Table).initForRenderColumnLengths (1 samples, 0.71%)</title><rect x="11134.3" y="389" width="85.6" height="15.0" fill="rgb(220,119,17)" rx="2" ry="2" />
<text  x="11137.29" y="399.5" >github.com..</text>
</g>
<g >
<title>encoding/json.(*decodeState).rescanLiteral (1 samples, 0.71%)</title><rect x="2063.7" y="181" width="85.6" height="15.0" fill="rgb(236,220,54)" rx="2" ry="2" />
<text  x="2066.71" y="191.5" >encoding/j..</text>
</g>
<g >
<title>runtime.gcAssistAlloc (1 samples, 0.71%)</title><rect x="6000.0" y="197" width="85.6" height="15.0" fill="rgb(254,140,20)" rx="2" ry="2" />
<text  x="6003.00" y="207.5" >runtime.gc..</text>
</g>
<g >
<title>bufio.(*Writer).Flush (3 samples, 2.14%)</title><rect x="5315.4" y="389" width="256.7" height="15.0" fill="rgb(229,0,37)" rx="2" ry="2" />
<text  x="5318.43" y="399.5" >bufio.(*Writer).Flush</text>
</g>
<g >
<title>vendor/golang.org/x/crypto/chacha20poly1305.(*chacha20poly1305).open (4 samples, 2.86%)</title><rect x="694.6" y="309" width="342.3" height="15.0" fill="rgb(227,149,28)" rx="2" ry="2" />
<text  x="697.57" y="319.5" >vendor/golang.org/x/crypto/chacha20poly1305.(*..</text>
</g>
<g >
<title>runtime.notewakeup (2 samples, 1.43%)</title><rect x="1122.4" y="277" width="171.2" height="15.0" fill="rgb(220,144,32)" rx="2" ry="2" />
<text  x="1125.43" y="287.5" >runtime.notewakeup</text>
</g>
<g >
<title>runtime.(*mheap).alloc (1 samples, 0.71%)</title><rect x="3432.9" y="101" width="85.5" height="15.0" fill="rgb(254,57,22)" rx="2" ry="2" />
<text  x="3435.86" y="111.5" >runtime.(*..</text>
</g>
<g >
<title>sync.(*Cond).Signal (2 samples, 1.43%)</title><rect x="1122.4" y="421" width="171.2" height="15.0" fill="rgb(213,50,31)" rx="2" ry="2" />
<text  x="1125.43" y="431.5" >sync.(*Cond).Signal</text>
</g>
<g >
<title>encoding/json.(*decodeState).value (28 samples, 20.00%)</title><rect x="1464.7" y="421" width="2396.0" height="15.0" fill="rgb(233,108,9)" rx="2" ry="2" />
<text  x="1467.71" y="431.5" >encoding/json.(*decodeState).value</text>
</g>
<g >
<title>encoding/json.(*decodeState).object (28 samples, 20.00%)</title><rect x="1464.7" y="405" width="2396.0" height="15.0" fill="rgb(253,152,25)" rx="2" ry="2" />
<text  x="1467.71" y="415.5" >encoding/json.(*decodeState).object</text>
</g>
<g >
<title>github.com/imdario/mergo.deepMerge (2 samples, 1.43%)</title><rect x="6941.3" y="405" width="171.1" height="15.0" fill="rgb(219,82,14)" rx="2" ry="2" />
<text  x="6944.29" y="415.5" >github.com/imdario/mer..</text>
</g>
<g >
<title>runtime.slicebytetostring (2 samples, 1.43%)</title><rect x="6513.4" y="245" width="171.2" height="15.0" fill="rgb(208,39,49)" rx="2" ry="2" />
<text  x="6516.43" y="255.5" >runtime.slicebytetostr..</text>
</g>
<g >
<title>runtime.futexsleep (1 samples, 0.71%)</title><rect x="11391.0" y="421" width="85.6" height="15.0" fill="rgb(249,99,33)" rx="2" ry="2" />
<text  x="11394.00" y="431.5" >runtime.fu..</text>
</g>
<g >
<title>encoding/json.(*decodeState).array (11 samples, 7.86%)</title><rect x="5828.9" y="373" width="941.2" height="15.0" fill="rgb(235,180,25)" rx="2" ry="2" />
<text  x="5831.86" y="383.5" >encoding/json.(*decodeState).array</text>
</g>
<g >
<title>crypto/tls.(*Conn).readFromUntil (5 samples, 3.57%)</title><rect x="266.7" y="357" width="427.9" height="15.0" fill="rgb(222,165,6)" rx="2" ry="2" />
<text  x="269.71" y="367.5" >crypto/tls.(*Conn).readFromUntil</text>
</g>
<g >
<title>reflect.Value.MapIndex (1 samples, 0.71%)</title><rect x="7026.9" y="389" width="85.5" height="15.0" fill="rgb(252,159,3)" rx="2" ry="2" />
<text  x="7029.86" y="399.5" >reflect.Va..</text>
</g>
<g >
<title>runtime.gcWriteBarrier (1 samples, 0.71%)</title><rect x="6342.3" y="229" width="85.6" height="15.0" fill="rgb(240,184,20)" rx="2" ry="2" />
<text  x="6345.29" y="239.5" >runtime.gc..</text>
</g>
<g >
<title>log.(*Logger).formatHeader (1 samples, 0.71%)</title><rect x="1379.1" y="405" width="85.6" height="15.0" fill="rgb(205,94,42)" rx="2" ry="2" />
<text  x="1382.14" y="415.5" >log.(*Logg..</text>
</g>
<g >
<title>runtime.callers.func1 (1 samples, 0.71%)</title><rect x="3347.3" y="117" width="85.6" height="15.0" fill="rgb(241,119,31)" rx="2" ry="2" />
<text  x="3350.29" y="127.5" >runtime.ca..</text>
</g>
<g >
<title>encoding/json.unquote (3 samples, 2.14%)</title><rect x="3176.1" y="229" width="256.8" height="15.0" fill="rgb(228,196,34)" rx="2" ry="2" />
<text  x="3179.14" y="239.5" >encoding/json.unquote</text>
</g>
<g >
<title>github.com/imdario/mergo.merge (7 samples, 5.00%)</title><rect x="6941.3" y="437" width="599.0" height="15.0" fill="rgb(226,3,42)" rx="2" ry="2" />
<text  x="6944.29" y="447.5" >github.com/imdario/mergo.merge</text>
</g>
<g >
<title>encoding/json.(*decodeState).unmarshal (28 samples, 20.00%)</title><rect x="1464.7" y="437" width="2396.0" height="15.0" fill="rgb(242,31,10)" rx="2" ry="2" />
<text  x="1467.71" y="447.5" >encoding/json.(*decodeState).unmarshal</text>
</g>
<g >
<title>runtime.gentraceback (1 samples, 0.71%)</title><rect x="3347.3" y="101" width="85.6" height="15.0" fill="rgb(223,154,0)" rx="2" ry="2" />
<text  x="3350.29" y="111.5" >runtime.ge..</text>
</g>
<g >
<title>runtime.(*mcache).nextFree (1 samples, 0.71%)</title><rect x="5914.4" y="181" width="85.6" height="15.0" fill="rgb(206,142,47)" rx="2" ry="2" />
<text  x="5917.43" y="191.5" >runtime.(*..</text>
</g>
<g >
<title>runtime.mallocgc (1 samples, 0.71%)</title><rect x="5743.3" y="421" width="85.6" height="15.0" fill="rgb(211,210,19)" rx="2" ry="2" />
<text  x="5746.29" y="431.5" >runtime.ma..</text>
</g>
<g >
<title>runtime.funcspdelta (1 samples, 0.71%)</title><rect x="3347.3" y="85" width="85.6" height="15.0" fill="rgb(211,122,52)" rx="2" ry="2" />
<text  x="3350.29" y="95.5" >runtime.fu..</text>
</g>
<g >
<title>runtime.mapassign_faststr (1 samples, 0.71%)</title><rect x="7711.4" y="453" width="85.6" height="15.0" fill="rgb(243,28,18)" rx="2" ry="2" />
<text  x="7714.43" y="463.5" >runtime.ma..</text>
</g>
<g >
<title>runtime.callers.func1 (1 samples, 0.71%)</title><rect x="3090.6" y="69" width="85.5" height="15.0" fill="rgb(231,101,25)" rx="2" ry="2" />
<text  x="3093.57" y="79.5" >runtime.ca..</text>
</g>
<g >
<title>runtime.main (3 samples, 2.14%)</title><rect x="11134.3" y="485" width="256.7" height="15.0" fill="rgb(235,191,20)" rx="2" ry="2" />
<text  x="11137.29" y="495.5" >runtime.main</text>
</g>
<g >
<title>encoding/json.unquote (2 samples, 1.43%)</title><rect x="2577.1" y="197" width="171.2" height="15.0" fill="rgb(250,57,32)" rx="2" ry="2" />
<text  x="2580.14" y="207.5" >encoding/json.unquote</text>
</g>
<g >
<title>internal/poll.(*FD).Read (5 samples, 3.57%)</title><rect x="266.7" y="277" width="427.9" height="15.0" fill="rgb(224,64,38)" rx="2" ry="2" />
<text  x="269.71" y="287.5" >internal/poll.(*FD).Read</text>
</g>
<g >
<title>runtime.(*mcentral).cacheSpan (1 samples, 0.71%)</title><rect x="3432.9" y="133" width="85.5" height="15.0" fill="rgb(220,63,37)" rx="2" ry="2" />
<text  x="3435.86" y="143.5" >runtime.(*..</text>
</g>
<g >
<title>syscall.Write (3 samples, 2.14%)</title><rect x="5315.4" y="245" width="256.7" height="15.0" fill="rgb(226,197,32)" rx="2" ry="2" />
<text  x="5318.43" y="255.5" >syscall.Write</text>
</g>
<g >
<title>runtime.memmove (2 samples, 1.43%)</title><rect x="5572.1" y="437" width="171.2" height="15.0" fill="rgb(216,184,43)" rx="2" ry="2" />
<text  x="5575.14" y="447.5" >runtime.memmove</text>
</g>
<g >
<title>reflect.mapiternext (1 samples, 0.71%)</title><rect x="7198.0" y="389" width="85.6" height="15.0" fill="rgb(226,39,40)" rx="2" ry="2" />
<text  x="7201.00" y="399.5" >reflect.ma..</text>
</g>
<g >
<title>encoding/json.(*decodeState).object (11 samples, 7.86%)</title><rect x="5828.9" y="405" width="941.2" height="15.0" fill="rgb(214,67,47)" rx="2" ry="2" />
<text  x="5831.86" y="415.5" >encoding/json.(*decodeState).object</text>
</g>
<g >
<title>encoding/json.(*decodeState).rescanLiteral (1 samples, 0.71%)</title><rect x="1550.3" y="213" width="85.6" height="15.0" fill="rgb(210,63,20)" rx="2" ry="2" />
<text  x="1553.29" y="223.5" >encoding/j..</text>
</g>
<g >
<title>runtime.growWork_faststr (2 samples, 1.43%)</title><rect x="2919.4" y="197" width="171.2" height="15.0" fill="rgb(234,126,33)" rx="2" ry="2" />
<text  x="2922.43" y="207.5" >runtime.growWork_faststr</text>
</g>
<g >
<title>report-istags/ocrequest.goGetExistingIstagsForFamilyInAllClusters (2 samples, 1.43%)</title><rect x="1293.6" y="469" width="171.1" height="15.0" fill="rgb(239,165,31)" rx="2" ry="2" />
<text  x="1296.57" y="479.5" >report-istags/ocreques..</text>
</g>
<g >
<title>net/http.(*http2clientConnReadLoop).processData (2 samples, 1.43%)</title><rect x="1122.4" y="453" width="171.2" height="15.0" fill="rgb(229,163,29)" rx="2" ry="2" />
<text  x="1125.43" y="463.5" >net/http.(*http2client..</text>
</g>
<g >
<title>github.com/imdario/mergo.deepMerge (1 samples, 0.71%)</title><rect x="1293.6" y="357" width="85.5" height="15.0" fill="rgb(225,161,5)" rx="2" ry="2" />
<text  x="1296.57" y="367.5" >github.com..</text>
</g>
<g >
<title>runtime.step (1 samples, 0.71%)</title><rect x="3347.3" y="53" width="85.6" height="15.0" fill="rgb(240,71,44)" rx="2" ry="2" />
<text  x="3350.29" y="63.5" >runtime.step</text>
</g>
<g >
<title>crypto/tls.(*atLeastReader).Read (5 samples, 3.57%)</title><rect x="266.7" y="325" width="427.9" height="15.0" fill="rgb(218,122,31)" rx="2" ry="2" />
<text  x="269.71" y="335.5" >crypto/tls.(*atLeastReader).Read</text>
</g>
<g >
<title>github.com/imdario/mergo.deepMerge (1 samples, 0.71%)</title><rect x="1293.6" y="341" width="85.5" height="15.0" fill="rgb(210,3,32)" rx="2" ry="2" />
<text  x="1296.57" y="351.5" >github.com..</text>
</g>
<g >
<title>runtime.scanobject (32 samples, 22.86%)</title><rect x="8396.0" y="421" width="2738.3" height="15.0" fill="rgb(209,83,37)" rx="2" ry="2" />
<text  x="8399.00" y="431.5" >runtime.scanobject</text>
</g>
<g >
<title>net/http.(*http2frameCache).getDataFrame (1 samples, 0.71%)</title><rect x="1036.9" y="437" width="85.5" height="15.0" fill="rgb(215,194,13)" rx="2" ry="2" />
<text  x="1039.86" y="447.5" >net/http.(..</text>
</g>
<g >
<title>net/http.(*http2Framer).ReadFrame (11 samples, 7.86%)</title><rect x="181.1" y="453" width="941.3" height="15.0" fill="rgb(234,22,23)" rx="2" ry="2" />
<text  x="184.14" y="463.5" >net/http.(*http2Framer).ReadFrame</text>
</g>
<g >
<title>runtime.mapassign_faststr (5 samples, 3.57%)</title><rect x="2748.3" y="213" width="427.8" height="15.0" fill="rgb(246,138,53)" rx="2" ry="2" />
<text  x="2751.29" y="223.5" >runtime.mapassign_faststr</text>
</g>
<g >
<title>runtime.mapassign_faststr (1 samples, 0.71%)</title><rect x="7882.6" y="453" width="85.5" height="15.0" fill="rgb(218,76,44)" rx="2" ry="2" />
<text  x="7885.57" y="463.5" >runtime.ma..</text>
</g>
<g >
<title>runtime.mallocgc (2 samples, 1.43%)</title><rect x="4887.6" y="357" width="171.1" height="15.0" fill="rgb(234,143,31)" rx="2" ry="2" />
<text  x="4890.57" y="367.5" >runtime.mallocgc</text>
</g>
<g >
<title>runtime.gcAssistAlloc.func1 (1 samples, 0.71%)</title><rect x="6684.6" y="197" width="85.5" height="15.0" fill="rgb(251,83,9)" rx="2" ry="2" />
<text  x="6687.57" y="207.5" >runtime.gc..</text>
</g>
<g >
<title>runtime.growWork_faststr (1 samples, 0.71%)</title><rect x="3775.1" y="261" width="85.6" height="15.0" fill="rgb(229,85,2)" rx="2" ry="2" />
<text  x="3778.14" y="271.5" >runtime.gr..</text>
</g>
<g >
<title>encoding/json.(*decodeState).literalInterface (1 samples, 0.71%)</title><rect x="1807.0" y="293" width="85.6" height="15.0" fill="rgb(254,139,6)" rx="2" ry="2" />
<text  x="1810.00" y="303.5" >encoding/j..</text>
</g>
<g >
<title>runtime.newarray (1 samples, 0.71%)</title><rect x="3090.6" y="165" width="85.5" height="15.0" fill="rgb(222,112,21)" rx="2" ry="2" />
<text  x="3093.57" y="175.5" >runtime.ne..</text>
</g>
<g >
<title>runtime.convTstring (1 samples, 0.71%)</title><rect x="1635.9" y="213" width="85.5" height="15.0" fill="rgb(236,26,9)" rx="2" ry="2" />
<text  x="1638.86" y="223.5" >runtime.co..</text>
</g>
<g >
<title>runtime.gcWriteBarrier (1 samples, 0.71%)</title><rect x="7198.0" y="341" width="85.6" height="15.0" fill="rgb(240,160,5)" rx="2" ry="2" />
<text  x="7201.00" y="351.5" >runtime.gc..</text>
</g>
<g >
<title>crypto/tls.(*Conn).readRecord (1 samples, 0.71%)</title><rect x="10.0" y="405" width="85.6" height="15.0" fill="rgb(242,216,34)" rx="2" ry="2" />
<text  x="13.00" y="415.5" >crypto/tls..</text>
</g>
<g >
<title>reflect.mapaccess (1 samples, 0.71%)</title><rect x="7026.9" y="373" width="85.5" height="15.0" fill="rgb(217,215,13)" rx="2" ry="2" />
<text  x="7029.86" y="383.5" >reflect.ma..</text>
</g>
<g >
<title>github.com/jedib0t/go-pretty/v6/table.(*Table).renderColumn (2 samples, 1.43%)</title><rect x="11219.9" y="357" width="171.1" height="15.0" fill="rgb(233,193,30)" rx="2" ry="2" />
<text  x="11222.86" y="367.5" >github.com/jedib0t/go-..</text>
</g>
<g >
<title>crypto/tls.(*Conn).readRecord (9 samples, 6.43%)</title><rect x="266.7" y="389" width="770.2" height="15.0" fill="rgb(229,42,45)" rx="2" ry="2" />
<text  x="269.71" y="399.5" >crypto/tls.(*Conn).readRecord</text>
</g>
<g >
<title>encoding/json.(*decodeState).objectInterface (11 samples, 7.86%)</title><rect x="2234.9" y="229" width="941.2" height="15.0" fill="rgb(248,223,3)" rx="2" ry="2" />
<text  x="2237.86" y="239.5" >encoding/json.(*decodeState).objectInterface</text>
</g>
<g >
<title>runtime.suspendG (1 samples, 0.71%)</title><rect x="8224.9" y="389" width="85.5" height="15.0" fill="rgb(244,26,37)" rx="2" ry="2" />
<text  x="8227.86" y="399.5" >runtime.su..</text>
</g>
<g >
<title>syscall.Read (5 samples, 3.57%)</title><rect x="266.7" y="245" width="427.9" height="15.0" fill="rgb(224,166,44)" rx="2" ry="2" />
<text  x="269.71" y="255.5" >syscall.Read</text>
</g>
<g >
<title>runtime.profilealloc (1 samples, 0.71%)</title><rect x="3090.6" y="133" width="85.5" height="15.0" fill="rgb(237,90,36)" rx="2" ry="2" />
<text  x="3093.57" y="143.5" >runtime.pr..</text>
</g>
<g >
<title>github.com/imdario/mergo.Merge (7 samples, 5.00%)</title><rect x="6941.3" y="453" width="599.0" height="15.0" fill="rgb(210,21,45)" rx="2" ry="2" />
<text  x="6944.29" y="463.5" >github.com/imdario/mergo.Merge</text>
</g>
<g >
<title>encoding/json.(*decodeState).arrayInterface (11 samples, 7.86%)</title><rect x="5828.9" y="357" width="941.2" height="15.0" fill="rgb(210,47,7)" rx="2" ry="2" />
<text  x="5831.86" y="367.5" >encoding/json.(*decodeState).arrayInterface</text>
</g>
<g >
<title>runtime.largeAlloc (2 samples, 1.43%)</title><rect x="4887.6" y="309" width="171.1" height="15.0" fill="rgb(205,41,19)" rx="2" ry="2" />
<text  x="4890.57" y="319.5" >runtime.largeAlloc</text>
</g>
<g >
<title>report-istags/ocrequest.OcGetAllIstagsOfNamespace (24 samples, 17.14%)</title><rect x="5828.9" y="469" width="2053.7" height="15.0" fill="rgb(211,14,36)" rx="2" ry="2" />
<text  x="5831.86" y="479.5" >report-istags/ocrequest.OcGetAllIstagsOfNamespace</text>
</g>
<g >
<title>runtime.wbBufFlush1 (1 samples, 0.71%)</title><rect x="7198.0" y="277" width="85.6" height="15.0" fill="rgb(224,75,8)" rx="2" ry="2" />
<text  x="7201.00" y="287.5" >runtime.wb..</text>
</g>
<g >
<title>runtime.mallocgc (2 samples, 1.43%)</title><rect x="3432.9" y="181" width="171.1" height="15.0" fill="rgb(251,189,53)" rx="2" ry="2" />
<text  x="3435.86" y="191.5" >runtime.mallocgc</text>
</g>
<g >
<title>github.com/imdario/mergo.merge (1 samples, 0.71%)</title><rect x="1293.6" y="437" width="85.5" height="15.0" fill="rgb(231,224,46)" rx="2" ry="2" />
<text  x="1296.57" y="447.5" >github.com..</text>
</g>
<g >
<title>runtime.(*mcentral).grow (1 samples, 0.71%)</title><rect x="2491.6" y="101" width="85.5" height="15.0" fill="rgb(209,60,50)" rx="2" ry="2" />
<text  x="2494.57" y="111.5" >runtime.(*..</text>
</g>
<g >
<title>runtime.entersyscall (2 samples, 1.43%)</title><rect x="523.4" y="197" width="171.2" height="15.0" fill="rgb(235,8,37)" rx="2" ry="2" />
<text  x="526.43" y="207.5" >runtime.entersyscall</text>
</g>
<g >
<title>reflect.Value.MapIndex (1 samples, 0.71%)</title><rect x="7112.4" y="405" width="85.6" height="15.0" fill="rgb(209,162,29)" rx="2" ry="2" />
<text  x="7115.43" y="415.5" >reflect.Va..</text>
</g>
<g >
<title>runtime.releasem (1 samples, 0.71%)</title><rect x="1635.9" y="197" width="85.5" height="15.0" fill="rgb(214,180,6)" rx="2" ry="2" />
<text  x="1638.86" y="207.5" >runtime.re..</text>
</g>
<g >
<title>fmt.Sprint (1 samples, 0.71%)</title><rect x="11305.4" y="309" width="85.6" height="15.0" fill="rgb(207,93,27)" rx="2" ry="2" />
<text  x="11308.43" y="319.5" >fmt.Sprint</text>
</g>
<g >
<title>runtime.makemap_small (1 samples, 0.71%)</title><rect x="6684.6" y="277" width="85.5" height="15.0" fill="rgb(221,25,47)" rx="2" ry="2" />
<text  x="6687.57" y="287.5" >runtime.ma..</text>
</g>
<g >
<title>runtime.callers (1 samples, 0.71%)</title><rect x="3090.6" y="101" width="85.5" height="15.0" fill="rgb(249,173,42)" rx="2" ry="2" />
<text  x="3093.57" y="111.5" >runtime.ca..</text>
</g>
<g >
<title>crypto/tls.(*Conn).readRecordOrCCS (9 samples, 6.43%)</title><rect x="266.7" y="373" width="770.2" height="15.0" fill="rgb(213,224,20)" rx="2" ry="2" />
<text  x="269.71" y="383.5" >crypto/tls.(*Conn).readRecordOrCCS</text>
</g>
<g >
<title>runtime.(*mheap).allocSpan (1 samples, 0.71%)</title><rect x="3432.9" y="53" width="85.5" height="15.0" fill="rgb(230,138,33)" rx="2" ry="2" />
<text  x="3435.86" y="63.5" >runtime.(*..</text>
</g>
<g >
<title>runtime.memclrNoHeapPointers (1 samples, 0.71%)</title><rect x="2491.6" y="69" width="85.5" height="15.0" fill="rgb(243,190,37)" rx="2" ry="2" />
<text  x="2494.57" y="79.5" >runtime.me..</text>
</g>
<g >
<title>encoding/json.unquote (1 samples, 0.71%)</title><rect x="3689.6" y="261" width="85.5" height="15.0" fill="rgb(226,171,34)" rx="2" ry="2" />
<text  x="3692.57" y="271.5" >encoding/j..</text>
</g>
<g >
<title>fmt.Sprint (1 samples, 0.71%)</title><rect x="11219.9" y="325" width="85.5" height="15.0" fill="rgb(222,50,47)" rx="2" ry="2" />
<text  x="11222.86" y="335.5" >fmt.Sprint</text>
</g>
<g >
<title>runtime.epollwait (1 samples, 0.71%)</title><rect x="11562.1" y="405" width="85.6" height="15.0" fill="rgb(252,194,19)" rx="2" ry="2" />
<text  x="11565.14" y="415.5" >runtime.ep..</text>
</g>
<g >
<title>runtime.netpoll (1 samples, 0.71%)</title><rect x="11562.1" y="421" width="85.6" height="15.0" fill="rgb(243,132,21)" rx="2" ry="2" />
<text  x="11565.14" y="431.5" >runtime.ne..</text>
</g>
<g >
<title>runtime.slicebytetostring (1 samples, 0.71%)</title><rect x="2662.7" y="181" width="85.6" height="15.0" fill="rgb(207,175,45)" rx="2" ry="2" />
<text  x="2665.71" y="191.5" >runtime.sl..</text>
</g>
<g >
<title>runtime.notewakeup (2 samples, 1.43%)</title><rect x="11733.3" y="389" width="171.1" height="15.0" fill="rgb(216,105,7)" rx="2" ry="2" />
<text  x="11736.29" y="399.5" >runtime.notewakeup</text>
</g>
<g >
<title>github.com/jedib0t/go-pretty/v6/table.(*Table).renderColumnAutoIndex (2 samples, 1.43%)</title><rect x="11219.9" y="341" width="171.1" height="15.0" fill="rgb(222,188,39)" rx="2" ry="2" />
<text  x="11222.86" y="351.5" >github.com/jedib0t/go-..</text>
</g>
<g >
<title>vendor/golang.org/x/crypto/chacha20poly1305.chacha20Poly1305Open (4 samples, 2.86%)</title><rect x="694.6" y="293" width="342.3" height="15.0" fill="rgb(228,152,15)" rx="2" ry="2" />
<text  x="697.57" y="303.5" >vendor/golang.org/x/crypto/chacha20poly1305.ch..</text>
</g>
<g >
<title>runtime.wakep (2 samples, 1.43%)</title><rect x="11733.3" y="421" width="171.1" height="15.0" fill="rgb(251,94,48)" rx="2" ry="2" />
<text  x="11736.29" y="431.5" >runtime.wakep</text>
</g>
<g >
<title>log.Println (1 samples, 0.71%)</title><rect x="1379.1" y="437" width="85.6" height="15.0" fill="rgb(231,68,15)" rx="2" ry="2" />
<text  x="1382.14" y="447.5" >log.Println</text>
</g>
<g >
<title>github.com/jedib0t/go-pretty/v6/table.(*Table).initForRender (1 samples, 0.71%)</title><rect x="11134.3" y="405" width="85.6" height="15.0" fill="rgb(249,129,2)" rx="2" ry="2" />
<text  x="11137.29" y="415.5" >github.com..</text>
</g>
<g >
<title>report-istags/ocrequest.workerExistingImages (51 samples, 36.43%)</title><rect x="1464.7" y="485" width="4364.2" height="15.0" fill="rgb(206,95,4)" rx="2" ry="2" />
<text  x="1467.71" y="495.5" >report-istags/ocrequest.workerExistingImages</text>
</g>
<g >
<title>runtime.futex (2 samples, 1.43%)</title><rect x="523.4" y="101" width="171.2" height="15.0" fill="rgb(252,204,30)" rx="2" ry="2" />
<text  x="526.43" y="111.5" >runtime.futex</text>
</g>
<g >
<title>report-istags/ocrequest.T_shaNames.Add (1 samples, 0.71%)</title><rect x="7882.6" y="469" width="85.5" height="15.0" fill="rgb(208,194,28)" rx="2" ry="2" />
<text  x="7885.57" y="479.5" >report-ist..</text>
</g>
<g >
<title>io.ReadAtLeast (2 samples, 1.43%)</title><rect x="10.0" y="437" width="171.1" height="15.0" fill="rgb(240,210,49)" rx="2" ry="2" />
<text  x="13.00" y="447.5" >io.ReadAtLeast</text>
</g>
<g >
<title>runtime.mapaccess1 (1 samples, 0.71%)</title><rect x="7968.1" y="453" width="85.6" height="15.0" fill="rgb(245,228,12)" rx="2" ry="2" />
<text  x="7971.14" y="463.5" >runtime.ma..</text>
</g>
<g >
<title>encoding/json.(*decodeState).objectInterface (11 samples, 7.86%)</title><rect x="5828.9" y="325" width="941.2" height="15.0" fill="rgb(249,163,46)" rx="2" ry="2" />
<text  x="5831.86" y="335.5" >encoding/json.(*decodeState).objectInterface</text>
</g>
<g >
<title>runtime.mapaccess2 (1 samples, 0.71%)</title><rect x="7026.9" y="357" width="85.5" height="15.0" fill="rgb(247,7,28)" rx="2" ry="2" />
<text  x="7029.86" y="367.5" >runtime.ma..</text>
</g>
<g >
<title>reflect.typedmemmove (1 samples, 0.71%)</title><rect x="7112.4" y="373" width="85.6" height="15.0" fill="rgb(219,217,49)" rx="2" ry="2" />
<text  x="7115.43" y="383.5" >reflect.ty..</text>
</g>
<g >
<title>runtime.findrunnable (2 samples, 1.43%)</title><rect x="11562.1" y="437" width="171.2" height="15.0" fill="rgb(206,126,52)" rx="2" ry="2" />
<text  x="11565.14" y="447.5" >runtime.findrunnable</text>
</g>
<g >
<title>runtime.sysmon (1 samples, 0.71%)</title><rect x="11904.4" y="453" width="85.6" height="15.0" fill="rgb(227,52,2)" rx="2" ry="2" />
<text  x="11907.43" y="463.5" >runtime.sy..</text>
</g>
<g >
<title>runtime.(*mcentral).grow (1 samples, 0.71%)</title><rect x="3432.9" y="117" width="85.5" height="15.0" fill="rgb(225,14,16)" rx="2" ry="2" />
<text  x="3435.86" y="127.5" >runtime.(*..</text>
</g>
<g >
<title>runtime.mProf_Malloc (1 samples, 0.71%)</title><rect x="3090.6" y="117" width="85.5" height="15.0" fill="rgb(211,186,17)" rx="2" ry="2" />
<text  x="3093.57" y="127.5" >runtime.mP..</text>
</g>
<g >
<title>runtime.rawbyteslice (1 samples, 0.71%)</title><rect x="5743.3" y="437" width="85.6" height="15.0" fill="rgb(229,229,54)" rx="2" ry="2" />
<text  x="5746.29" y="447.5" >runtime.ra..</text>
</g>
<g >
<title>report-istags/ocrequest.GetAllIstagsForFamily (2 samples, 1.43%)</title><rect x="1293.6" y="485" width="171.1" height="15.0" fill="rgb(229,106,19)" rx="2" ry="2" />
<text  x="1296.57" y="495.5" >report-istags/ocreques..</text>
</g>
<g >
<title>runtime.gcDrainN (1 samples, 0.71%)</title><rect x="6684.6" y="165" width="85.5" height="15.0" fill="rgb(219,111,31)" rx="2" ry="2" />
<text  x="6687.57" y="175.5" >runtime.gc..</text>
</g>
<g >
<title>encoding/json.(*decodeState).rescanLiteral (1 samples, 0.71%)</title><rect x="1978.1" y="245" width="85.6" height="15.0" fill="rgb(226,159,7)" rx="2" ry="2" />
<text  x="1981.14" y="255.5" >encoding/j..</text>
</g>
<g >
<title>encoding/json.unquote (1 samples, 0.71%)</title><rect x="2149.3" y="197" width="85.6" height="15.0" fill="rgb(233,76,2)" rx="2" ry="2" />
<text  x="2152.29" y="207.5" >encoding/j..</text>
</g>
<g >
<title>runtime.(*mheap).alloc.func1 (1 samples, 0.71%)</title><rect x="3432.9" y="69" width="85.5" height="15.0" fill="rgb(245,89,10)" rx="2" ry="2" />
<text  x="3435.86" y="79.5" >runtime.(*..</text>
</g>
<g >
<title>runtime.slicebytetostring (1 samples, 0.71%)</title><rect x="7625.9" y="437" width="85.5" height="15.0" fill="rgb(236,68,37)" rx="2" ry="2" />
<text  x="7628.86" y="447.5" >runtime.sl..</text>
</g>
<g >
<title>runtime.makeBucketArray (2 samples, 1.43%)</title><rect x="3432.9" y="213" width="171.1" height="15.0" fill="rgb(220,220,42)" rx="2" ry="2" />
<text  x="3435.86" y="223.5" >runtime.makeBucketArray</text>
</g>
<g >
<title>log.(*Logger).Output (1 samples, 0.71%)</title><rect x="1379.1" y="421" width="85.6" height="15.0" fill="rgb(216,85,5)" rx="2" ry="2" />
<text  x="1382.14" y="431.5" >log.(*Logg..</text>
</g>
<g >
<title>runtime.markroot.func1 (1 samples, 0.71%)</title><rect x="8224.9" y="405" width="85.5" height="15.0" fill="rgb(209,135,33)" rx="2" ry="2" />
<text  x="8227.86" y="415.5" >runtime.ma..</text>
</g>
<g >
<title>github.com/jedib0t/go-pretty/v6/table.(*Table).Render (3 samples, 2.14%)</title><rect x="11134.3" y="421" width="256.7" height="15.0" fill="rgb(250,196,25)" rx="2" ry="2" />
<text  x="11137.29" y="431.5" >github.com/jedib0t/go-pretty/v6/ta..</text>
</g>
<g >
<title>encoding/json.(*decodeState).valueInterface (6 samples, 4.29%)</title><rect x="2234.9" y="213" width="513.4" height="15.0" fill="rgb(208,34,25)" rx="2" ry="2" />
<text  x="2237.86" y="223.5" >encoding/json.(*decodeState).valueInterface</text>
</g>
<g >
<title>runtime.(*mcache).refill (1 samples, 0.71%)</title><rect x="5914.4" y="165" width="85.6" height="15.0" fill="rgb(213,154,45)" rx="2" ry="2" />
<text  x="5917.43" y="175.5" >runtime.(*..</text>
</g>
<g >
<title>reflect.copyVal (1 samples, 0.71%)</title><rect x="7112.4" y="389" width="85.6" height="15.0" fill="rgb(227,207,48)" rx="2" ry="2" />
<text  x="7115.43" y="399.5" >reflect.co..</text>
</g>
<g >
<title>encoding/json.(*decodeState).literalInterface (1 samples, 0.71%)</title><rect x="2063.7" y="197" width="85.6" height="15.0" fill="rgb(247,14,10)" rx="2" ry="2" />
<text  x="2066.71" y="207.5" >encoding/j..</text>
</g>
<g >
<title>runtime.gcAssistAlloc.func1 (1 samples, 0.71%)</title><rect x="6000.0" y="165" width="85.6" height="15.0" fill="rgb(227,143,27)" rx="2" ry="2" />
<text  x="6003.00" y="175.5" >runtime.gc..</text>
</g>
<g >
<title>crypto/tls.(*xorNonceAEAD).Open (4 samples, 2.86%)</title><rect x="694.6" y="341" width="342.3" height="15.0" fill="rgb(223,118,29)" rx="2" ry="2" />
<text  x="697.57" y="351.5" >crypto/tls.(*xorNonceAEAD).Open</text>
</g>
<g >
<title>runtime.heapBitsForAddr (1 samples, 0.71%)</title><rect x="1892.6" y="213" width="85.5" height="15.0" fill="rgb(236,144,1)" rx="2" ry="2" />
<text  x="1895.57" y="223.5" >runtime.he..</text>
</g>
<g >
<title>io.ReadAtLeast (10 samples, 7.14%)</title><rect x="181.1" y="421" width="855.8" height="15.0" fill="rgb(252,202,24)" rx="2" ry="2" />
<text  x="184.14" y="431.5" >io.ReadAtLeast</text>
</g>
<g >
<title>encoding/json.(*decodeState).objectInterface (11 samples, 7.86%)</title><rect x="5828.9" y="293" width="941.2" height="15.0" fill="rgb(243,129,0)" rx="2" ry="2" />
<text  x="5831.86" y="303.5" >encoding/json.(*decodeState).objectInterface</text>
</g>
<g >
<title>encoding/json.checkValid (12 samples, 8.57%)</title><rect x="3860.7" y="437" width="1026.9" height="15.0" fill="rgb(240,53,35)" rx="2" ry="2" />
<text  x="3863.71" y="447.5" >encoding/json.checkValid</text>
</g>
<g >
<title>runtime.systemstack (1 samples, 0.71%)</title><rect x="5743.3" y="405" width="85.6" height="15.0" fill="rgb(223,59,20)" rx="2" ry="2" />
<text  x="5746.29" y="415.5" >runtime.sy..</text>
</g>
<g >
<title>runtime.mallocgc (1 samples, 0.71%)</title><rect x="3347.3" y="197" width="85.6" height="15.0" fill="rgb(217,120,4)" rx="2" ry="2" />
<text  x="3350.29" y="207.5" >runtime.ma..</text>
</g>
<g >
<title>runtime.evacuate_faststr (1 samples, 0.71%)</title><rect x="3775.1" y="245" width="85.6" height="15.0" fill="rgb(225,97,45)" rx="2" ry="2" />
<text  x="3778.14" y="255.5" >runtime.ev..</text>
</g>
<g >
<title>runtime.mallocgc (1 samples, 0.71%)</title><rect x="6684.6" y="245" width="85.5" height="15.0" fill="rgb(208,188,12)" rx="2" ry="2" />
<text  x="6687.57" y="255.5" >runtime.ma..</text>
</g>
<g >
<title>github.com/imdario/mergo.deepMerge (1 samples, 0.71%)</title><rect x="1293.6" y="373" width="85.5" height="15.0" fill="rgb(226,70,16)" rx="2" ry="2" />
<text  x="1296.57" y="383.5" >github.com..</text>
</g>
<g >
<title>io/ioutil.readAll (8 samples, 5.71%)</title><rect x="4887.6" y="437" width="684.5" height="15.0" fill="rgb(223,180,35)" rx="2" ry="2" />
<text  x="4890.57" y="447.5" >io/ioutil.readAll</text>
</g>
<g >
<title>runtime.mapassign_faststr (4 samples, 2.86%)</title><rect x="6085.6" y="245" width="342.3" height="15.0" fill="rgb(242,21,44)" rx="2" ry="2" />
<text  x="6088.57" y="255.5" >runtime.mapassign_faststr</text>
</g>
<g >
<title>runtime.typedmemmove (1 samples, 0.71%)</title><rect x="7112.4" y="357" width="85.6" height="15.0" fill="rgb(253,65,19)" rx="2" ry="2" />
<text  x="7115.43" y="367.5" >runtime.ty..</text>
</g>
<g >
<title>internal/poll.ignoringEINTR (3 samples, 2.14%)</title><rect x="5315.4" y="261" width="256.7" height="15.0" fill="rgb(214,107,54)" rx="2" ry="2" />
<text  x="5318.43" y="271.5" >internal/poll.ignoringEINTR</text>
</g>
<g >
<title>encoding/json.(*decodeState).arrayInterface (3 samples, 2.14%)</title><rect x="1550.3" y="293" width="256.7" height="15.0" fill="rgb(244,193,36)" rx="2" ry="2" />
<text  x="1553.29" y="303.5" >encoding/json.(*decodeState).array..</text>
</g>
<g >
<title>runtime.ready (2 samples, 1.43%)</title><rect x="1122.4" y="325" width="171.2" height="15.0" fill="rgb(227,5,45)" rx="2" ry="2" />
<text  x="1125.43" y="335.5" >runtime.ready</text>
</g>
<g >
<title>runtime.reentersyscall (2 samples, 1.43%)</title><rect x="523.4" y="181" width="171.2" height="15.0" fill="rgb(243,23,30)" rx="2" ry="2" />
<text  x="526.43" y="191.5" >runtime.reentersyscall</text>
</g>
<g >
<title>runtime.evacuate_faststr (2 samples, 1.43%)</title><rect x="2919.4" y="181" width="171.2" height="15.0" fill="rgb(252,56,41)" rx="2" ry="2" />
<text  x="2922.43" y="191.5" >runtime.evacuate_faststr</text>
</g>
<g >
<title>runtime.osyield (1 samples, 0.71%)</title><rect x="8224.9" y="373" width="85.5" height="15.0" fill="rgb(223,88,21)" rx="2" ry="2" />
<text  x="8227.86" y="383.5" >runtime.os..</text>
</g>
<g >
<title>runtime.exitsyscall0 (1 samples, 0.71%)</title><rect x="11391.0" y="469" width="85.6" height="15.0" fill="rgb(250,187,26)" rx="2" ry="2" />
<text  x="11394.00" y="479.5" >runtime.ex..</text>
</g>
<g >
<title>runtime.scanobject (1 samples, 0.71%)</title><rect x="6684.6" y="149" width="85.5" height="15.0" fill="rgb(220,149,15)" rx="2" ry="2" />
<text  x="6687.57" y="159.5" >runtime.sc..</text>
</g>
<g >
<title>syscall.Syscall (3 samples, 2.14%)</title><rect x="5315.4" y="213" width="256.7" height="15.0" fill="rgb(250,52,49)" rx="2" ry="2" />
<text  x="5318.43" y="223.5" >syscall.Syscall</text>
</g>
<g >
<title>encoding/json.stateEndValue (1 samples, 0.71%)</title><rect x="1807.0" y="261" width="85.6" height="15.0" fill="rgb(226,144,50)" rx="2" ry="2" />
<text  x="1810.00" y="271.5" >encoding/j..</text>
</g>
<g >
<title>net.(*conn).Read (5 samples, 3.57%)</title><rect x="266.7" y="309" width="427.9" height="15.0" fill="rgb(237,136,1)" rx="2" ry="2" />
<text  x="269.71" y="319.5" >net.(*conn).Read</text>
</g>
<g >
<title>runtime.park_m (4 samples, 2.86%)</title><rect x="11562.1" y="469" width="342.3" height="15.0" fill="rgb(219,218,9)" rx="2" ry="2" />
<text  x="11565.14" y="479.5" >runtime.park_m</text>
</g>
<g >
<title>github.com/jedib0t/go-pretty/v6/table.(*Table).renderRows (2 samples, 1.43%)</title><rect x="11219.9" y="405" width="171.1" height="15.0" fill="rgb(237,184,52)" rx="2" ry="2" />
<text  x="11222.86" y="415.5" >github.com/jedib0t/go-..</text>
</g>
<g >
<title>runtime.mallocgc.func1 (2 samples, 1.43%)</title><rect x="4887.6" y="325" width="171.1" height="15.0" fill="rgb(232,186,48)" rx="2" ry="2" />
<text  x="4890.57" y="335.5" >runtime.mallocgc.func1</text>
</g>
<g >
<title>bufio.(*Reader).Read (2 samples, 1.43%)</title><rect x="10.0" y="421" width="171.1" height="15.0" fill="rgb(245,108,52)" rx="2" ry="2" />
<text  x="13.00" y="431.5" >bufio.(*Reader).Read</text>
</g>
<g >
<title>runtime.stopm (1 samples, 0.71%)</title><rect x="11647.7" y="421" width="85.6" height="15.0" fill="rgb(225,168,7)" rx="2" ry="2" />
<text  x="11650.71" y="431.5" >runtime.st..</text>
</g>
<g >
<title>runtime.newobject (1 samples, 0.71%)</title><rect x="3604.0" y="245" width="85.6" height="15.0" fill="rgb(213,217,39)" rx="2" ry="2" />
<text  x="3607.00" y="255.5" >runtime.ne..</text>
</g>
<g >
<title>bytes.(*Buffer).ReadFrom (5 samples, 3.57%)</title><rect x="266.7" y="341" width="427.9" height="15.0" fill="rgb(226,34,47)" rx="2" ry="2" />
<text  x="269.71" y="351.5" >bytes.(*Buffer).ReadFrom</text>
</g>
<g >
<title>net.(*conn).Write (3 samples, 2.14%)</title><rect x="5315.4" y="309" width="256.7" height="15.0" fill="rgb(205,57,39)" rx="2" ry="2" />
<text  x="5318.43" y="319.5" >net.(*conn).Write</text>
</g>
<g >
<title>encoding/json.(*decodeState).objectInterface (28 samples, 20.00%)</title><rect x="1464.7" y="325" width="2396.0" height="15.0" fill="rgb(232,81,19)" rx="2" ry="2" />
<text  x="1467.71" y="335.5" >encoding/json.(*decodeState).objectInterface</text>
</g>
<g >
<title>runtime.wakep (2 samples, 1.43%)</title><rect x="1122.4" y="309" width="171.2" height="15.0" fill="rgb(238,29,3)" rx="2" ry="2" />
<text  x="1125.43" y="319.5" >runtime.wakep</text>
</g>
<g >
<title>sync.runtime_notifyListNotifyOne (2 samples, 1.43%)</title><rect x="1122.4" y="405" width="171.2" height="15.0" fill="rgb(242,80,10)" rx="2" ry="2" />
<text  x="1125.43" y="415.5" >sync.runtime_notifyLis..</text>
</g>
<g >
<title>runtime.mallocgc (1 samples, 0.71%)</title><rect x="1892.6" y="229" width="85.5" height="15.0" fill="rgb(249,138,16)" rx="2" ry="2" />
<text  x="1895.57" y="239.5" >runtime.ma..</text>
</g>
<g >
<title>encoding/json.(*decodeState).literalInterface (1 samples, 0.71%)</title><rect x="5914.4" y="229" width="85.6" height="15.0" fill="rgb(250,169,50)" rx="2" ry="2" />
<text  x="5917.43" y="239.5" >encoding/j..</text>
</g>
<g >
<title>runtime.gcAssistAlloc1 (1 samples, 0.71%)</title><rect x="6684.6" y="181" width="85.5" height="15.0" fill="rgb(213,18,48)" rx="2" ry="2" />
<text  x="6687.57" y="191.5" >runtime.gc..</text>
</g>
<g >
<title>vendor/golang.org/x/crypto/chacha20poly1305.(*chacha20poly1305).open (1 samples, 0.71%)</title><rect x="10.0" y="325" width="85.6" height="15.0" fill="rgb(221,178,30)" rx="2" ry="2" />
<text  x="13.00" y="335.5" >vendor/gol..</text>
</g>
<g >
<title>runtime.memmove (3 samples, 2.14%)</title><rect x="7283.6" y="341" width="256.7" height="15.0" fill="rgb(221,14,30)" rx="2" ry="2" />
<text  x="7286.57" y="351.5" >runtime.memmove</text>
</g>
<g >
<title>crypto/tls.(*halfConn).decrypt (4 samples, 2.86%)</title><rect x="694.6" y="357" width="342.3" height="15.0" fill="rgb(209,195,17)" rx="2" ry="2" />
<text  x="697.57" y="367.5" >crypto/tls.(*halfConn).decrypt</text>
</g>
<g >
<title>encoding/json.stateEndValue (1 samples, 0.71%)</title><rect x="6855.7" y="421" width="85.6" height="15.0" fill="rgb(221,136,39)" rx="2" ry="2" />
<text  x="6858.71" y="431.5" >encoding/j..</text>
</g>
<g >
<title>runtime.schedule (1 samples, 0.71%)</title><rect x="11476.6" y="437" width="85.5" height="15.0" fill="rgb(235,106,27)" rx="2" ry="2" />
<text  x="11479.57" y="447.5" >runtime.sc..</text>
</g>
<g >
<title>runtime.memclrNoHeapPointers (1 samples, 0.71%)</title><rect x="5743.3" y="341" width="85.6" height="15.0" fill="rgb(212,149,20)" rx="2" ry="2" />
<text  x="5746.29" y="351.5" >runtime.me..</text>
</g>
<g >
<title>runtime.memclrNoHeapPointers (2 samples, 1.43%)</title><rect x="4887.6" y="277" width="171.1" height="15.0" fill="rgb(245,215,24)" rx="2" ry="2" />
<text  x="4890.57" y="287.5" >runtime.memclrNoHeapPo..</text>
</g>
<g >
<title>encoding/json.(*decodeState).valueInterface (28 samples, 20.00%)</title><rect x="1464.7" y="341" width="2396.0" height="15.0" fill="rgb(253,41,9)" rx="2" ry="2" />
<text  x="1467.71" y="351.5" >encoding/json.(*decodeState).valueInterface</text>
</g>
<g >
<title>encoding/json.(*decodeState).valueInterface (10 samples, 7.14%)</title><rect x="5828.9" y="277" width="855.7" height="15.0" fill="rgb(222,126,45)" rx="2" ry="2" />
<text  x="5831.86" y="287.5" >encoding/json.(*decodeState).valueInterface</text>
</g>
<g >
<title>runtime.gcDrain (36 samples, 25.71%)</title><rect x="8053.7" y="437" width="3080.6" height="15.0" fill="rgb(222,17,11)" rx="2" ry="2" />
<text  x="8056.71" y="447.5" >runtime.gcDrain</text>
</g>
<g >
<title>github.com/jedib0t/go-pretty/v6/table.(*Table).initForRenderColumnLengths.func1 (1 samples, 0.71%)</title><rect x="11134.3" y="373" width="85.6" height="15.0" fill="rgb(237,58,13)" rx="2" ry="2" />
<text  x="11137.29" y="383.5" >github.com..</text>
</g>
<g >
<title>runtime.newobject (1 samples, 0.71%)</title><rect x="6684.6" y="261" width="85.5" height="15.0" fill="rgb(254,120,2)" rx="2" ry="2" />
<text  x="6687.57" y="271.5" >runtime.ne..</text>
</g>
<g >
<title>io/ioutil.ReadAll (8 samples, 5.71%)</title><rect x="4887.6" y="453" width="684.5" height="15.0" fill="rgb(237,176,9)" rx="2" ry="2" />
<text  x="4890.57" y="463.5" >io/ioutil.ReadAll</text>
</g>
<g >
<title>net/http.(*http2pipe).Write (2 samples, 1.43%)</title><rect x="1122.4" y="437" width="171.2" height="15.0" fill="rgb(238,204,53)" rx="2" ry="2" />
<text  x="1125.43" y="447.5" >net/http.(*http2pipe)...</text>
</g>
<g >
<title>reflect.Value.Len (1 samples, 0.71%)</title><rect x="6941.3" y="357" width="85.6" height="15.0" fill="rgb(227,12,49)" rx="2" ry="2" />
<text  x="6944.29" y="367.5" >reflect.Va..</text>
</g>
<g >
<title>runtime.futex (2 samples, 1.43%)</title><rect x="11733.3" y="357" width="171.1" height="15.0" fill="rgb(208,88,23)" rx="2" ry="2" />
<text  x="11736.29" y="367.5" >runtime.futex</text>
</g>
<g >
<title>runtime.schedule (4 samples, 2.86%)</title><rect x="11562.1" y="453" width="342.3" height="15.0" fill="rgb(251,65,16)" rx="2" ry="2" />
<text  x="11565.14" y="463.5" >runtime.schedule</text>
</g>
<g >
<title>encoding/json.(*decodeState).unmarshal (11 samples, 7.86%)</title><rect x="5828.9" y="437" width="941.2" height="15.0" fill="rgb(233,140,54)" rx="2" ry="2" />
<text  x="5831.86" y="447.5" >encoding/json.(*decodeState).unmarshal</text>
</g>
<g >
<title>runtime.markroot (1 samples, 0.71%)</title><rect x="8224.9" y="421" width="85.5" height="15.0" fill="rgb(252,14,17)" rx="2" ry="2" />
<text  x="8227.86" y="431.5" >runtime.ma..</text>
</g>
<g >
<title>runtime.systemstack (2 samples, 1.43%)</title><rect x="4887.6" y="341" width="171.1" height="15.0" fill="rgb(249,72,26)" rx="2" ry="2" />
<text  x="4890.57" y="351.5" >runtime.systemstack</text>
</g>
<g >
<title>reflect.mapassign (3 samples, 2.14%)</title><rect x="7283.6" y="389" width="256.7" height="15.0" fill="rgb(206,1,17)" rx="2" ry="2" />
<text  x="7286.57" y="399.5" >reflect.mapassign</text>
</g>
<g >
<title>runtime.memmove (1 samples, 0.71%)</title><rect x="95.6" y="405" width="85.5" height="15.0" fill="rgb(226,117,29)" rx="2" ry="2" />
<text  x="98.57" y="415.5" >runtime.me..</text>
</g>
<g >
<title>runtime.systemstack (1 samples, 0.71%)</title><rect x="7198.0" y="309" width="85.6" height="15.0" fill="rgb(224,190,30)" rx="2" ry="2" />
<text  x="7201.00" y="319.5" >runtime.sy..</text>
</g>
<g >
<title>runtime.systemstack (1 samples, 0.71%)</title><rect x="3090.6" y="85" width="85.5" height="15.0" fill="rgb(239,186,11)" rx="2" ry="2" />
<text  x="3093.57" y="95.5" >runtime.sy..</text>
</g>
<g >
<title>encoding/json.(*decodeState).value (11 samples, 7.86%)</title><rect x="5828.9" y="389" width="941.2" height="15.0" fill="rgb(210,124,17)" rx="2" ry="2" />
<text  x="5831.86" y="399.5" >encoding/json.(*decodeState).value</text>
</g>
<g >
<title>runtime.memmove (1 samples, 0.71%)</title><rect x="11305.4" y="277" width="85.6" height="15.0" fill="rgb(247,127,53)" rx="2" ry="2" />
<text  x="11308.43" y="287.5" >runtime.me..</text>
</g>
<g >
<title>runtime.mallocgc (2 samples, 1.43%)</title><rect x="6513.4" y="229" width="171.2" height="15.0" fill="rgb(219,144,40)" rx="2" ry="2" />
<text  x="6516.43" y="239.5" >runtime.mallocgc</text>
</g>
<g >
<title>runtime.mProf_Malloc (1 samples, 0.71%)</title><rect x="3347.3" y="165" width="85.6" height="15.0" fill="rgb(241,179,25)" rx="2" ry="2" />
<text  x="3350.29" y="175.5" >runtime.mP..</text>
</g>
<g >
<title>runtime.goready.func1 (2 samples, 1.43%)</title><rect x="1122.4" y="341" width="171.2" height="15.0" fill="rgb(236,115,34)" rx="2" ry="2" />
<text  x="1125.43" y="351.5" >runtime.goready.func1</text>
</g>
<g >
<title>runtime.netpoll (1 samples, 0.71%)</title><rect x="8310.4" y="405" width="85.6" height="15.0" fill="rgb(251,194,18)" rx="2" ry="2" />
<text  x="8313.43" y="415.5" >runtime.ne..</text>
</g>
<g >
<title>runtime.gcWriteBarrierDX (1 samples, 0.71%)</title><rect x="7198.0" y="357" width="85.6" height="15.0" fill="rgb(221,62,9)" rx="2" ry="2" />
<text  x="7201.00" y="367.5" >runtime.gc..</text>
</g>
<g >
<title>runtime.futexwakeup (2 samples, 1.43%)</title><rect x="1122.4" y="261" width="171.2" height="15.0" fill="rgb(232,146,15)" rx="2" ry="2" />
<text  x="1125.43" y="271.5" >runtime.futexwakeup</text>
</g>
<g >
<title>internal/poll.(*FD).Write (3 samples, 2.14%)</title><rect x="5315.4" y="277" width="256.7" height="15.0" fill="rgb(211,55,44)" rx="2" ry="2" />
<text  x="5318.43" y="287.5" >internal/poll.(*FD).Write</text>
</g>
<g >
<title>net/http.http2transportResponseBody.Read (3 samples, 2.14%)</title><rect x="5315.4" y="405" width="256.7" height="15.0" fill="rgb(229,106,52)" rx="2" ry="2" />
<text  x="5318.43" y="415.5" >net/http.http2transportResponseBod..</text>
</g>
<g >
<title>github.com/imdario/mergo.deepMerge (1 samples, 0.71%)</title><rect x="6941.3" y="389" width="85.6" height="15.0" fill="rgb(245,103,36)" rx="2" ry="2" />
<text  x="6944.29" y="399.5" >github.com..</text>
</g>
<g >
<title>runtime.memmove (1 samples, 0.71%)</title><rect x="7625.9" y="421" width="85.5" height="15.0" fill="rgb(240,112,11)" rx="2" ry="2" />
<text  x="7628.86" y="431.5" >runtime.me..</text>
</g>
<g >
<title>net/http.http2stickyErrWriter.Write (3 samples, 2.14%)</title><rect x="5315.4" y="373" width="256.7" height="15.0" fill="rgb(208,81,16)" rx="2" ry="2" />
<text  x="5318.43" y="383.5" >net/http.http2stickyErrWriter.Write</text>
</g>
<g >
<title>fmt.(*pp).free (1 samples, 0.71%)</title><rect x="11219.9" y="309" width="85.5" height="15.0" fill="rgb(227,134,25)" rx="2" ry="2" />
<text  x="11222.86" y="319.5" >fmt.(*pp)...</text>
</g>
<g >
<title>runtime.mstart1 (1 samples, 0.71%)</title><rect x="11904.4" y="469" width="85.6" height="15.0" fill="rgb(220,48,52)" rx="2" ry="2" />
<text  x="11907.43" y="479.5" >runtime.ms..</text>
</g>
<g >
<title>github.com/imdario/mergo.deepMerge (1 samples, 0.71%)</title><rect x="1293.6" y="405" width="85.5" height="15.0" fill="rgb(254,83,35)" rx="2" ry="2" />
<text  x="1296.57" y="415.5" >github.com..</text>
</g>
<g >
<title>encoding/json.(*decodeState).valueInterface (2 samples, 1.43%)</title><rect x="2063.7" y="213" width="171.2" height="15.0" fill="rgb(235,30,49)" rx="2" ry="2" />
<text  x="2066.71" y="223.5" >encoding/json.(*decode..</text>
</g>
<g >
<title>runtime.newobject (1 samples, 0.71%)</title><rect x="7797.0" y="453" width="85.6" height="15.0" fill="rgb(220,49,39)" rx="2" ry="2" />
<text  x="7800.00" y="463.5" >runtime.ne..</text>
</g>
<g >
<title>github.com/imdario/mergo.deepMerge (1 samples, 0.71%)</title><rect x="1293.6" y="421" width="85.5" height="15.0" fill="rgb(241,19,37)" rx="2" ry="2" />
<text  x="1296.57" y="431.5" >github.com..</text>
</g>
<g >
<title>reflect.Value.MapKeys (1 samples, 0.71%)</title><rect x="7198.0" y="405" width="85.6" height="15.0" fill="rgb(239,153,16)" rx="2" ry="2" />
<text  x="7201.00" y="415.5" >reflect.Va..</text>
</g>
<g >
<title>runtime.makemap_small (1 samples, 0.71%)</title><rect x="6000.0" y="245" width="85.6" height="15.0" fill="rgb(242,1,38)" rx="2" ry="2" />
<text  x="6003.00" y="255.5" >runtime.ma..</text>
</g>
<g >
<title>crypto/tls.(*halfConn).decrypt (1 samples, 0.71%)</title><rect x="10.0" y="373" width="85.6" height="15.0" fill="rgb(205,11,16)" rx="2" ry="2" />
<text  x="13.00" y="383.5" >crypto/tls..</text>
</g>
<g >
<title>runtime.resetspinning (2 samples, 1.43%)</title><rect x="11733.3" y="437" width="171.1" height="15.0" fill="rgb(235,100,30)" rx="2" ry="2" />
<text  x="11736.29" y="447.5" >runtime.resetspinning</text>
</g>
<g >
<title>runtime.nanotime (1 samples, 0.71%)</title><rect x="11476.6" y="405" width="85.5" height="15.0" fill="rgb(251,222,28)" rx="2" ry="2" />
<text  x="11479.57" y="415.5" >runtime.na..</text>
</g>
<g >
<title>vendor/golang.org/x/crypto/chacha20poly1305.(*chacha20poly1305).Open (4 samples, 2.86%)</title><rect x="694.6" y="325" width="342.3" height="15.0" fill="rgb(225,123,54)" rx="2" ry="2" />
<text  x="697.57" y="335.5" >vendor/golang.org/x/crypto/chacha20poly1305.(*..</text>
</g>
<g >
<title>encoding/json.(*decodeState).rescanLiteral (1 samples, 0.71%)</title><rect x="1807.0" y="277" width="85.6" height="15.0" fill="rgb(227,117,8)" rx="2" ry="2" />
<text  x="1810.00" y="287.5" >encoding/j..</text>
</g>
<g >
<title>github.com/jedib0t/go-pretty/v6/table.(*Table).renderLine (2 samples, 1.43%)</title><rect x="11219.9" y="373" width="171.1" height="15.0" fill="rgb(221,150,1)" rx="2" ry="2" />
<text  x="11222.86" y="383.5" >github.com/jedib0t/go-..</text>
</g>
<g >
<title>runtime.profilealloc (1 samples, 0.71%)</title><rect x="6599.0" y="213" width="85.6" height="15.0" fill="rgb(247,32,9)" rx="2" ry="2" />
<text  x="6602.00" y="223.5" >runtime.pr..</text>
</g>
<g >
<title>encoding/json.stateBeginString (1 samples, 0.71%)</title><rect x="4374.1" y="421" width="85.6" height="15.0" fill="rgb(219,37,10)" rx="2" ry="2" />
<text  x="4377.14" y="431.5" >encoding/j..</text>
</g>
<g >
<title>encoding/json.unquote (3 samples, 2.14%)</title><rect x="6427.9" y="261" width="256.7" height="15.0" fill="rgb(209,182,49)" rx="2" ry="2" />
<text  x="6430.86" y="271.5" >encoding/json.unquote</text>
</g>
<g >
<title>runtime.(*mcentral).cacheSpan (1 samples, 0.71%)</title><rect x="5914.4" y="149" width="85.6" height="15.0" fill="rgb(225,219,0)" rx="2" ry="2" />
<text  x="5917.43" y="159.5" >runtime.(*..</text>
</g>
<g >
<title>runtime.systemstack (36 samples, 25.71%)</title><rect x="8053.7" y="469" width="3080.6" height="15.0" fill="rgb(252,57,6)" rx="2" ry="2" />
<text  x="8056.71" y="479.5" >runtime.systemstack</text>
</g>
<g >
<title>syscall.read (5 samples, 3.57%)</title><rect x="266.7" y="229" width="427.9" height="15.0" fill="rgb(244,204,13)" rx="2" ry="2" />
<text  x="269.71" y="239.5" >syscall.read</text>
</g>
<g >
<title>runtime.stkbucket (1 samples, 0.71%)</title><rect x="7797.0" y="389" width="85.6" height="15.0" fill="rgb(242,210,2)" rx="2" ry="2" />
<text  x="7800.00" y="399.5" >runtime.st..</text>
</g>
<g >
<title>github.com/imdario/mergo.deepMerge (7 samples, 5.00%)</title><rect x="6941.3" y="421" width="599.0" height="15.0" fill="rgb(206,62,11)" rx="2" ry="2" />
<text  x="6944.29" y="431.5" >github.com/imdario/mergo.deepMerge</text>
</g>
<g >
<title>github.com/imdario/mergo.isEmptyValue (1 samples, 0.71%)</title><rect x="1293.6" y="325" width="85.5" height="15.0" fill="rgb(241,97,20)" rx="2" ry="2" />
<text  x="1296.57" y="335.5" >github.com..</text>
</g>
<g >
<title>runtime.(*mcache).nextFree (1 samples, 0.71%)</title><rect x="3432.9" y="165" width="85.5" height="15.0" fill="rgb(211,1,9)" rx="2" ry="2" />
<text  x="3435.86" y="175.5" >runtime.(*..</text>
</g>
<g >
<title>bufio.(*Reader).Read (10 samples, 7.14%)</title><rect x="181.1" y="405" width="855.8" height="15.0" fill="rgb(219,97,24)" rx="2" ry="2" />
<text  x="184.14" y="415.5" >bufio.(*Reader).Read</text>
</g>
<g >
<title>runtime.mapassign (3 samples, 2.14%)</title><rect x="7283.6" y="373" width="256.7" height="15.0" fill="rgb(215,196,37)" rx="2" ry="2" />
<text  x="7286.57" y="383.5" >runtime.mapassign</text>
</g>
<g >
<title>github.com/imdario/mergo.Merge (1 samples, 0.71%)</title><rect x="1293.6" y="453" width="85.5" height="15.0" fill="rgb(235,222,3)" rx="2" ry="2" />
<text  x="1296.57" y="463.5" >github.com..</text>
</g>
<g >
<title>runtime.newarray (2 samples, 1.43%)</title><rect x="3432.9" y="197" width="171.1" height="15.0" fill="rgb(241,114,9)" rx="2" ry="2" />
<text  x="3435.86" y="207.5" >runtime.newarray</text>
</g>
</g>
</svg>
